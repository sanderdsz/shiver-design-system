{"version":3,"sources":["webpack:///../node_modules/overlayscrollbars/js/OverlayScrollbars.js"],"names":["global","window","this","document","undefined","_targets","_easingsMath","TYPES","LEXICON","c","s","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","resultPossibilities","v","currVendorWithoutDashes","uppercasedName","elmStyle","createElement","length","replace","_cssPropertyValue","property","values","suffix","prop","dummyStyle","possbleValues","split","preparedSuffix","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","eventDoc","originalEvent","target","srcElement","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","obj","Object","toString","MATH","Math","JQUERY","jQuery","EASING","PI","cos","sin","w","pow","t","sqrt","n","asin","a","abs","o","swing","b","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","constructor","_each","callback","isArrayLike","stripAndCollapse","value","match","join","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","_animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","progress","step","specialEasing","hasOptions","from","to","start","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","_frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","frame","elementIsVisible","getClientRects","elms","base","elements","innerHTML","children","self","on","eventName","handler","eventNameLength","each","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classList","classNamePrepared","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","animate","clearQ","jump","jumpToEnd","_stop","INSTANCES","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","possibleTemplateTypes","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","optionsDefaultsAndTemplate","convert","_pluginsExtensions","_pluginsOptions","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","_defaults","template","recursive","valType","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","trident","edge","rv","parseIntFunc","parseInt","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","valTwo","absValOne","absValTwo","isZoom","oldScrollbarSize","update","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strTransitionEndEvent","_classNameHostElement","_cassNamesPrefix","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportElement","_classNameViewportNativeScrollbarsOverlaid","_classNameTextInherit","_classNameScrollbarTrackOff","_classNameScrollbarTrack","_classNameScrollbarHandleOff","_classNameScrollbarHandle","_classNameScrollbarUnusable","_classNameScrollbar","_classNameScrollbarAutoHidden","_classNameScrollbarCornerResize","_classNameScrollbarCorner","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_extensions","_swallowedUpdateHints","_updateOnLoadElms","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","curr","cache","changedAttrs","checks","_elem","_attrs","check","checkCache","updateViewportAttrsFromTarget","meaningfulAttrsChanged","float","bodyMinSizeC","changed","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","h","bodyMinSizeChanged","updateAutoContentSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","updateElementsOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","destroy","extName","disconnectMutationObservers","setupResizeObserver","removeExt","pop","setupHostMouseTouchEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","updateOnLoadCallback","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","ratio","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTL","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","refreshScrollbarHandleOffset","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","currScroll","maxScroll","isRTLisX","normalizeShortcuts","evalFunc","eval","substr","parseToZeroOrNumber","isNaN","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","getElements","elementName","host","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","valid","targetElement","initBodyScroll","_bodyMouseTouchDownListener","defaultView","parentWindow","findFirst","_strDot","setupResponsiveEventListener","setupStructureEvents","setupScrollbarEvents","reconnectMutationObserver","insideIFrame","mouseDownPosition","mouseDownSize","mouseDownInvertedScale","documentDragMove","onMouseTouchDownContinue","pageOffset","getCoordinates","hostElementCSS","documentMouseTouchUp","eventIsTrusted","documentOnSelectStart","releaseCapture","connectMutationObservers","isTouchEvent","screenX","screenY","addDestroyEventListener","getHostElementInvertedScale","setCapture","setupScrollbarCornerEvents","createMutationObservers","hostOnResized","activeElement","focus","construct","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","useNative","nativeParam","onElementResizedCallback","resizeObserver","strAnimationStartEvent","generateDiv","observe","dir","_classNameResizeObserverItemElement","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","onload","wnd","contentDocument","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserver","contentLastUpdate","mutations","doUpdate","mutation","attributeName","mutationType","hostClassNamesChanged","oldValue","isUnknownMutation","textareaUpdate","doUpdateForce","mutatedAttrs","createHostClassNameRegExp","filter","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","elm","eachUpdateOnLoad","updateOnLoadSelector","bodyMinSize","_strMinMinus","f","oldClassNames","newClassNames","regex","currClasses","diff","a1","a2","k","getArrayDifferences","idx","attrs","targetAttr","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","getTopRightBottomLeftHost","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","border","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","_strMaxMinus","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","setContentElementCSS","contentArrangeElementCSS","arrangeContent","arrangeChanged","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","setViewportCSS","viewportElementCSS","XY","_X_Y","_strPaddingMinus","_strMarginMinus","strOverflow","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","widestRow","textareaLastCol","cursorRow","cursorCol","_cursorRow","_cursorColumn","_rows","_columns","_widestRow","_cursorPosition","_cursorMax","getTextareaInfo","textareaRowsChanged","lastRow","lastCol","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","selectOrGenerateDivByClass","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","updateTextarea","doClearInterval","clearInterval","keyCode","setInterval","strFocus","propertyName","affectingPropsX","affectingPropsXContentBox","_strBorderMinus","affectingPropsY","affectingPropsYContentBox","checkX","sizeIsAffected","checkPropertyName","isSizeAffectingCSSProperty","nativeOverlayScrollbarsAreActive","horizontalElements","verticalElements","selectOrGenerateScrollbarDOM","isHorizontal","_scrollbar","_track","_handle","resetScrollbarDOM","trackTimeout","mouseDownScroll","mouseDownOffset","scrollbarVarsInfo","_info","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","scrollDelta","isFinite","clientX","clientY","onHandleMouseTouchDownAction","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollRange","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","shallBeVisible","scrollbarElement","delayfree","anyActive","handleCSS","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","isRTLisHorizontal","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","strTranslateBrace","transitionStr","assembledValue","strResult","valueArray","regExpMain","RegExp","regExpValidate","properties","splitCssStyleByComma","$1","getCSSTransitionString","isTrack","element2","_l_t","args","dependent","extensionOnName","targetCSSObject","prefix","zeroX","zeroY","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","nodeName","toFloat","num","classesOrAttrs","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","current","doAdd","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","factory"],"mappings":"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","file":"8768ebe2-92d5c5cad45e9200c5b1.js","sourcesContent":["/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) define(function () {\n    return factory(global, global.document, undefined);\n  });else if (typeof module === 'object' && typeof module.exports === 'object') module.exports = factory(global, global.document, undefined);else factory(global, global.document, undefined);\n})(typeof window !== 'undefined' ? window : this, function (window, document, undefined) {\n  'use strict';\n\n  var PLUGINNAME = 'OverlayScrollbars';\n  var TYPES = {\n    o: 'object',\n    f: 'function',\n    a: 'array',\n    s: 'string',\n    b: 'boolean',\n    n: 'number',\n    u: 'undefined',\n    z: 'null' //d : 'date',\n    //e : 'error',\n    //r : 'regexp',\n    //y : 'symbol'\n\n  };\n  var LEXICON = {\n    c: 'class',\n    s: 'style',\n    i: 'id',\n    l: 'length',\n    p: 'prototype',\n    ti: 'tabindex',\n    oH: 'offsetHeight',\n    cH: 'clientHeight',\n    sH: 'scrollHeight',\n    oW: 'offsetWidth',\n    cW: 'clientWidth',\n    sW: 'scrollWidth',\n    hOP: 'hasOwnProperty',\n    bCR: 'getBoundingClientRect'\n  };\n\n  var VENDORS = function () {\n    //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n    var jsCache = {};\n    var cssCache = {};\n    var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n    var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n    function firstLetterToUpper(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    return {\n      _cssPrefixes: cssPrefixes,\n      _jsPrefixes: jsPrefixes,\n      _cssProperty: function _cssProperty(name) {\n        var result = cssCache[name];\n        if (cssCache[LEXICON.hOP](name)) return result;\n        var uppercasedName = firstLetterToUpper(name);\n        var elmStyle = document.createElement('div')[LEXICON.s];\n        var resultPossibilities;\n        var i = 0;\n        var v;\n        var currVendorWithoutDashes;\n\n        for (; i < cssPrefixes.length; i++) {\n          currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n          resultPossibilities = [name, //transition\n          cssPrefixes[i] + name, //-webkit-transition\n          currVendorWithoutDashes + uppercasedName, //webkitTransition\n          firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n          ];\n\n          for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n            if (elmStyle[resultPossibilities[v]] !== undefined) {\n              result = resultPossibilities[v];\n              break;\n            }\n          }\n        }\n\n        cssCache[name] = result;\n        return result;\n      },\n      _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n        var name = property + ' ' + values;\n        var result = cssCache[name];\n        if (cssCache[LEXICON.hOP](name)) return result;\n        var dummyStyle = document.createElement('div')[LEXICON.s];\n        var possbleValues = values.split(' ');\n        var preparedSuffix = suffix || '';\n        var i = 0;\n        var v = -1;\n        var prop;\n\n        for (; i < possbleValues[LEXICON.l]; i++) {\n          for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n            if (dummyStyle[LEXICON.l]) {\n              result = prop;\n              break;\n            }\n          }\n        }\n\n        cssCache[name] = result;\n        return result;\n      },\n      _jsAPI: function _jsAPI(name, isInterface, fallback) {\n        var i = 0;\n        var result = jsCache[name];\n\n        if (!jsCache[LEXICON.hOP](name)) {\n          result = window[name];\n\n          for (; i < jsPrefixes[LEXICON.l]; i++) {\n            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n          }\n\n          jsCache[name] = result;\n        }\n\n        return result || fallback;\n      }\n    };\n  }();\n\n  var COMPATIBILITY = function () {\n    function windowSize(x) {\n      return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n    }\n\n    function bind(func, thisObj) {\n      if (typeof func != TYPES.f) {\n        throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var proto = LEXICON.p;\n      var aArgs = Array[proto].slice.call(arguments, 2);\n\n      var fNOP = function fNOP() {};\n\n      var fBound = function fBound() {\n        return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n      };\n\n      if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n      fBound[proto] = new fNOP();\n      return fBound;\n    }\n\n    return {\n      /**\r\n       * Gets the current window width.\r\n       * @returns {Number|number} The current window width in pixel.\r\n       */\n      wW: bind(windowSize, 0, true),\n\n      /**\r\n       * Gets the current window height.\r\n       * @returns {Number|number} The current window height in pixel.\r\n       */\n      wH: bind(windowSize, 0),\n\n      /**\r\n       * Gets the MutationObserver Object or undefined if not supported.\r\n       * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n       */\n      mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n      /**\r\n       * Gets the ResizeObserver Object or undefined if not supported.\r\n       * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n       */\n      rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n      /**\r\n       * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n       * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n       */\n      rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n        return window.setTimeout(func, 1000 / 60);\n      }),\n\n      /**\r\n       * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n       * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n       */\n      cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n        return window.clearTimeout(id);\n      }),\n\n      /**\r\n       * Gets the current time.\r\n       * @returns {number} The current time.\r\n       */\n      now: function now() {\n        return Date.now && Date.now() || new Date().getTime();\n      },\n\n      /**\r\n       * Stops the propagation of the given event.\r\n       * @param event The event of which the propagation shall be stoped.\r\n       */\n      stpP: function stpP(event) {\n        if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n      },\n\n      /**\r\n       * Prevents the default action of the given event.\r\n       * @param event The event of which the default action shall be prevented.\r\n       */\n      prvD: function prvD(event) {\n        if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n      },\n\n      /**\r\n       * Gets the pageX and pageY values of the given mouse event.\r\n       * @param event The mouse event of which the pageX and pageX shall be got.\r\n       * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n       */\n      page: function page(event) {\n        event = event.originalEvent || event;\n        var strPage = 'page';\n        var strClient = 'client';\n        var strX = 'X';\n        var strY = 'Y';\n        var target = event.target || event.srcElement || document;\n        var eventDoc = target.ownerDocument || document;\n        var doc = eventDoc.documentElement;\n        var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n        if (event.touches !== undefined) {\n          var touch = event.touches[0];\n          return {\n            x: touch[strPage + strX],\n            y: touch[strPage + strY]\n          };\n        } // Calculate pageX/Y if not native supported\n\n\n        if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n          return {\n            x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n            y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n          };\n        }\n\n        return {\n          x: event[strPage + strX],\n          y: event[strPage + strY]\n        };\n      },\n\n      /**\r\n       * Gets the clicked mouse button of the given mouse event.\r\n       * @param event The mouse event of which the clicked button shal be got.\r\n       * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n       */\n      mBtn: function mBtn(event) {\n        var button = event.button;\n        if (!event.which && button !== undefined) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n      },\n\n      /**\r\n       * Checks whether a item is in the given array and returns its index.\r\n       * @param item The item of which the position in the array shall be determined.\r\n       * @param arr The array.\r\n       * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n       */\n      inA: function inA(item, arr) {\n        for (var i = 0; i < arr[LEXICON.l]; i++) {\n          //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n          try {\n            if (arr[i] === item) return i;\n          } catch (e) {}\n        }\n\n        return -1;\n      },\n\n      /**\r\n       * Returns true if the given value is a array.\r\n       * @param arr The potential array.\r\n       * @returns {boolean} True if the given value is a array, false otherwise.\r\n       */\n      isA: function isA(arr) {\n        var def = Array.isArray;\n        return def ? def(arr) : this.type(arr) == TYPES.a;\n      },\n\n      /**\r\n       * Determine the internal JavaScript [[Class]] of the given object.\r\n       * @param obj The object of which the type shall be determined.\r\n       * @returns {string} The type of the given object.\r\n       */\n      type: function type(obj) {\n        if (obj === undefined) return obj + '';\n        if (obj === null) return obj + '';\n        return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n      },\n      bind: bind\n      /**\r\n       * Gets the vendor-prefixed CSS property by the given name.\r\n       * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n       * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n       * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n       * @param propName The unprefixed CSS property name.\r\n       * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n        cssProp: function(propName) {\r\n          return VENDORS._cssProperty(propName);\r\n      }\r\n      */\n\n    };\n  }();\n\n  var MATH = Math;\n  var JQUERY = window.jQuery;\n\n  var EASING = function () {\n    var _easingsMath = {\n      p: MATH.PI,\n      c: MATH.cos,\n      s: MATH.sin,\n      w: MATH.pow,\n      t: MATH.sqrt,\n      n: MATH.asin,\n      a: MATH.abs,\n      o: 1.70158\n    };\n    /*\r\n     x : current percent (0 - 1),\r\n     t : current time (duration * percent),\r\n     b : start value (from),\r\n     c : end value (to),\r\n     d : duration\r\n       easingName : function(x, t, b, c, d) { return easedValue; }\r\n     */\n\n    return {\n      swing: function swing(x, t, b, c, d) {\n        return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n      },\n      linear: function linear(x, t, b, c, d) {\n        return x;\n      },\n      easeInQuad: function easeInQuad(x, t, b, c, d) {\n        return c * (t /= d) * t + b;\n      },\n      easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n      },\n      easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n      },\n      easeInCubic: function easeInCubic(x, t, b, c, d) {\n        return c * (t /= d) * t * t + b;\n      },\n      easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n      },\n      easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n      },\n      easeInQuart: function easeInQuart(x, t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n      },\n      easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n      },\n      easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n      },\n      easeInQuint: function easeInQuint(x, t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n      },\n      easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n      },\n      easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n      },\n      easeInSine: function easeInSine(x, t, b, c, d) {\n        return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n      },\n      easeOutSine: function easeOutSine(x, t, b, c, d) {\n        return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n      },\n      easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n        return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n      },\n      easeInExpo: function easeInExpo(x, t, b, c, d) {\n        return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n      },\n      easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n        return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n      },\n      easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n        if (t == 0) return b;\n        if (t == d) return b + c;\n        if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n        return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n      },\n      easeInCirc: function easeInCirc(x, t, b, c, d) {\n        return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n      },\n      easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n        return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n      },\n      easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n      },\n      easeInElastic: function easeInElastic(x, t, b, c, d) {\n        var s = _easingsMath.o;\n        var p = 0;\n        var a = c;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n\n        if (a < _easingsMath.a(c)) {\n          a = c;\n          s = p / 4;\n        } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n        return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n      },\n      easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n        var s = _easingsMath.o;\n        var p = 0;\n        var a = c;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n\n        if (a < _easingsMath.a(c)) {\n          a = c;\n          s = p / 4;\n        } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n        return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n      },\n      easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n        var s = _easingsMath.o;\n        var p = 0;\n        var a = c;\n        if (t == 0) return b;\n        if ((t /= d / 2) == 2) return b + c;\n        if (!p) p = d * (.3 * 1.5);\n\n        if (a < _easingsMath.a(c)) {\n          a = c;\n          s = p / 4;\n        } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n        if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n      },\n      easeInBack: function easeInBack(x, t, b, c, d, s) {\n        s = s || _easingsMath.o;\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n      },\n      easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n        s = s || _easingsMath.o;\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n      },\n      easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n        s = s || _easingsMath.o;\n        return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n      },\n      easeInBounce: function easeInBounce(x, t, b, c, d) {\n        return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n      },\n      easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n        var o = 7.5625;\n\n        if ((t /= d) < 1 / 2.75) {\n          return c * (o * t * t) + b;\n        } else if (t < 2 / 2.75) {\n          return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n        } else if (t < 2.5 / 2.75) {\n          return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n        } else {\n          return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n        }\n      },\n      easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n        return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n      }\n    };\n    /*\r\n     *\r\n     * TERMS OF USE - EASING EQUATIONS\r\n     * \r\n     * Open source under the BSD License. \r\n     * \r\n     * Copyright Â© 2001 Robert Penner\r\n     * All rights reserved.\r\n     * \r\n     * Redistribution and use in source and binary forms, with or without modification, \r\n     * are permitted provided that the following conditions are met:\r\n     * \r\n     * Redistributions of source code must retain the above copyright notice, this list of \r\n     * conditions and the following disclaimer.\r\n     * Redistributions in binary form must reproduce the above copyright notice, this list \r\n     * of conditions and the following disclaimer in the documentation and/or other materials \r\n     * provided with the distribution.\r\n     * \r\n     * Neither the name of the author nor the names of contributors may be used to endorse \r\n     * or promote products derived from this software without specific prior written permission.\r\n     * \r\n     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n     * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n     * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n     *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n     *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n     *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n     * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n     *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n     * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n     *\r\n     */\n  }();\n\n  var FRAMEWORK = function () {\n    var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n    var _strSpace = ' ';\n    var _strEmpty = '';\n    var _strScrollLeft = 'scrollLeft';\n    var _strScrollTop = 'scrollTop';\n    var _animations = [];\n    var _type = COMPATIBILITY.type;\n    var _cssNumber = {\n      animationIterationCount: true,\n      columnCount: true,\n      fillOpacity: true,\n      flexGrow: true,\n      flexShrink: true,\n      fontWeight: true,\n      lineHeight: true,\n      opacity: true,\n      order: true,\n      orphans: true,\n      widows: true,\n      zIndex: true,\n      zoom: true\n    };\n\n    function extend() {\n      var src,\n          copyIsArray,\n          copy,\n          name,\n          options,\n          clone,\n          target = arguments[0] || {},\n          i = 1,\n          length = arguments[LEXICON.l],\n          deep = false; // Handle a deep copy situation\n\n      if (_type(target) == TYPES.b) {\n        deep = target;\n        target = arguments[1] || {}; // skip the boolean and the target\n\n        i = 2;\n      } // Handle case when target is a string or something (possible in deep copy)\n\n\n      if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n        target = {};\n      } // extend jQuery itself if only one argument is passed\n\n\n      if (length === i) {\n        target = FakejQuery;\n        --i;\n      }\n\n      for (; i < length; i++) {\n        // Only deal with non-null/undefined values\n        if ((options = arguments[i]) != null) {\n          // Extend the base object\n          for (name in options) {\n            src = target[name];\n            copy = options[name]; // Prevent never-ending loop\n\n            if (target === copy) {\n              continue;\n            } // Recurse if we're merging plain objects or arrays\n\n\n            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n              if (copyIsArray) {\n                copyIsArray = false;\n                clone = src && COMPATIBILITY.isA(src) ? src : [];\n              } else {\n                clone = src && isPlainObject(src) ? src : {};\n              } // Never move original objects, clone them\n\n\n              target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n            } else if (copy !== undefined) {\n              target[name] = copy;\n            }\n          }\n        }\n      } // Return the modified object\n\n\n      return target;\n    }\n\n    ;\n\n    function inArray(item, arr, fromIndex) {\n      for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n        if (arr[i] === item) return i;\n      }\n\n      return -1;\n    }\n\n    function isFunction(obj) {\n      return _type(obj) == TYPES.f;\n    }\n\n    ;\n\n    function isEmptyObject(obj) {\n      for (var name in obj) {\n        return false;\n      }\n\n      return true;\n    }\n\n    ;\n\n    function isPlainObject(obj) {\n      if (!obj || _type(obj) != TYPES.o) return false;\n      var key;\n      var proto = LEXICON.p;\n      var hasOwnProperty = Object[proto].hasOwnProperty;\n      var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n      var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n      if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n        return false;\n      }\n\n      for (key in obj) {\n        /**/\n      }\n\n      return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n    }\n\n    ;\n\n    function _each(obj, callback) {\n      var i = 0;\n\n      if (isArrayLike(obj)) {\n        for (; i < obj[LEXICON.l]; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) break;\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) break;\n        }\n      }\n\n      return obj;\n    }\n\n    ;\n\n    function isArrayLike(obj) {\n      var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n      var t = _type(obj);\n\n      return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n    }\n\n    function stripAndCollapse(value) {\n      var tokens = value.match(_rnothtmlwhite) || [];\n      return tokens.join(_strSpace);\n    }\n\n    function matches(elem, selector) {\n      var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n      var i = nodeList[LEXICON.l];\n\n      while (i--) {\n        if (nodeList[i] == elem) return true;\n      }\n\n      return false;\n    }\n\n    function insertAdjacentElement(el, strategy, child) {\n      if (COMPATIBILITY.isA(child)) {\n        for (var i = 0; i < child[LEXICON.l]; i++) {\n          insertAdjacentElement(el, strategy, child[i]);\n        }\n      } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n    }\n\n    function setCSSVal(el, prop, val) {\n      try {\n        if (el[LEXICON.s][prop] !== undefined) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n      } catch (e) {}\n    }\n\n    function parseCSSVal(prop, val) {\n      if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n      return val;\n    }\n\n    function startNextAnimationInQ(animObj, removeFromQ) {\n      var index;\n      var nextAnim;\n      if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n      if (animObj.q[LEXICON.l] > 0) {\n        nextAnim = animObj.q[0];\n\n        _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n      } else {\n        index = inArray(animObj, _animations);\n        if (index > -1) _animations.splice(index, 1);\n      }\n    }\n\n    function setAnimationValue(el, prop, value) {\n      if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n    }\n\n    function _animate(el, props, options, easing, complete, guaranteedNext) {\n      var hasOptions = isPlainObject(options);\n      var from = {};\n      var to = {};\n      var i = 0;\n      var key;\n      var animObj;\n      var start;\n      var progress;\n      var step;\n      var specialEasing;\n      var duration;\n\n      if (hasOptions) {\n        easing = options.easing;\n        start = options.start;\n        progress = options.progress;\n        step = options.step;\n        specialEasing = options.specialEasing;\n        complete = options.complete;\n        duration = options.duration;\n      } else duration = options;\n\n      specialEasing = specialEasing || {};\n      duration = duration || 400;\n      easing = easing || 'swing';\n      guaranteedNext = guaranteedNext || false;\n\n      for (; i < _animations[LEXICON.l]; i++) {\n        if (_animations[i].el === el) {\n          animObj = _animations[i];\n          break;\n        }\n      }\n\n      if (!animObj) {\n        animObj = {\n          el: el,\n          q: []\n        };\n\n        _animations.push(animObj);\n      }\n\n      for (key in props) {\n        if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n      }\n\n      for (key in from) {\n        if (from[key] !== props[key] && props[key] !== undefined) to[key] = props[key];\n      }\n\n      if (!isEmptyObject(to)) {\n        var timeNow;\n        var end;\n        var percent;\n        var fromVal;\n        var toVal;\n        var easedVal;\n        var timeStart;\n\n        var _frame;\n\n        var elapsed;\n        var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n        var qObj = {\n          props: to,\n          duration: hasOptions ? options : duration,\n          easing: easing,\n          complete: complete\n        };\n\n        if (qPos === -1) {\n          qPos = animObj.q[LEXICON.l];\n          animObj.q.push(qObj);\n        }\n\n        if (qPos === 0) {\n          if (duration > 0) {\n            timeStart = COMPATIBILITY.now();\n\n            _frame = function frame() {\n              timeNow = COMPATIBILITY.now();\n              elapsed = timeNow - timeStart;\n              end = qObj.stop || elapsed >= duration;\n              percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n              for (key in to) {\n                fromVal = parseFloat(from[key]);\n                toVal = parseFloat(to[key]);\n                easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                setAnimationValue(el, key, easedVal);\n\n                if (isFunction(step)) {\n                  step(easedVal, {\n                    elem: el,\n                    prop: key,\n                    start: fromVal,\n                    now: easedVal,\n                    end: toVal,\n                    pos: percent,\n                    options: {\n                      easing: easing,\n                      speacialEasing: specialEasing,\n                      duration: duration,\n                      complete: complete,\n                      step: step\n                    },\n                    startTime: timeStart\n                  });\n                }\n              }\n\n              if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n              if (end) {\n                startNextAnimationInQ(animObj);\n                if (isFunction(complete)) complete();\n              } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n            };\n\n            qObj.frame = COMPATIBILITY.rAF()(_frame);\n          } else {\n            for (key in to) {\n              setAnimationValue(el, key, to[key]);\n            }\n\n            startNextAnimationInQ(animObj);\n          }\n        }\n      } else if (guaranteedNext) startNextAnimationInQ(animObj);\n    }\n\n    function _stop(el, clearQ, jumpToEnd) {\n      var animObj;\n      var qObj;\n      var key;\n      var i = 0;\n\n      for (; i < _animations[LEXICON.l]; i++) {\n        animObj = _animations[i];\n\n        if (animObj.el === el) {\n          if (animObj.q[LEXICON.l] > 0) {\n            qObj = animObj.q[0];\n            qObj.stop = true;\n            COMPATIBILITY.cAF()(qObj.frame);\n            animObj.q.splice(0, 1);\n            if (jumpToEnd) for (key in qObj.props) {\n              setAnimationValue(el, key, qObj.props[key]);\n            }\n            if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n          }\n\n          break;\n        }\n      }\n    }\n\n    function elementIsVisible(el) {\n      return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n    }\n\n    function FakejQuery(selector) {\n      if (arguments[LEXICON.l] === 0) return this;\n      var base = new FakejQuery();\n      var elements = selector;\n      var i = 0;\n      var elms;\n      var el;\n\n      if (_type(selector) == TYPES.s) {\n        elements = [];\n\n        if (selector.charAt(0) === '<') {\n          el = document.createElement('div');\n          el.innerHTML = selector;\n          elms = el.children;\n        } else {\n          elms = document.querySelectorAll(selector);\n        }\n\n        for (; i < elms[LEXICON.l]; i++) {\n          elements.push(elms[i]);\n        }\n      }\n\n      if (elements) {\n        if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n        for (i = 0; i < elements[LEXICON.l]; i++) {\n          base[i] = elements[i];\n        }\n\n        base[LEXICON.l] = elements[LEXICON.l];\n      }\n\n      return base;\n    }\n\n    ;\n    FakejQuery[LEXICON.p] = {\n      //EVENTS:\n      on: function on(eventName, handler) {\n        eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n        var eventNameLength = eventName[LEXICON.l];\n        var i = 0;\n        var el;\n        return this.each(function () {\n          el = this;\n\n          try {\n            if (el.addEventListener) {\n              for (; i < eventNameLength; i++) {\n                el.addEventListener(eventName[i], handler);\n              }\n            } else if (el.detachEvent) {\n              for (; i < eventNameLength; i++) {\n                el.attachEvent('on' + eventName[i], handler);\n              }\n            }\n          } catch (e) {}\n        });\n      },\n      off: function off(eventName, handler) {\n        eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n        var eventNameLength = eventName[LEXICON.l];\n        var i = 0;\n        var el;\n        return this.each(function () {\n          el = this;\n\n          try {\n            if (el.removeEventListener) {\n              for (; i < eventNameLength; i++) {\n                el.removeEventListener(eventName[i], handler);\n              }\n            } else if (el.detachEvent) {\n              for (; i < eventNameLength; i++) {\n                el.detachEvent('on' + eventName[i], handler);\n              }\n            }\n          } catch (e) {}\n        });\n      },\n      one: function one(eventName, handler) {\n        eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n        return this.each(function () {\n          var el = FakejQuery(this);\n          FakejQuery.each(eventName, function (i, oneEventName) {\n            var oneHandler = function oneHandler(e) {\n              handler.call(this, e);\n              el.off(oneEventName, oneHandler);\n            };\n\n            el.on(oneEventName, oneHandler);\n          });\n        });\n      },\n      trigger: function trigger(eventName) {\n        var el;\n        var event;\n        return this.each(function () {\n          el = this;\n\n          if (document.createEvent) {\n            event = document.createEvent('HTMLEvents');\n            event.initEvent(eventName, true, false);\n            el.dispatchEvent(event);\n          } else {\n            el.fireEvent('on' + eventName);\n          }\n        });\n      },\n      //DOM NODE INSERTING / REMOVING:\n      append: function append(child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'beforeend', child);\n        });\n      },\n      prepend: function prepend(child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'afterbegin', child);\n        });\n      },\n      before: function before(child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'beforebegin', child);\n        });\n      },\n      after: function after(child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'afterend', child);\n        });\n      },\n      remove: function remove() {\n        return this.each(function () {\n          var el = this;\n          var parentNode = el.parentNode;\n          if (parentNode != null) parentNode.removeChild(el);\n        });\n      },\n      unwrap: function unwrap() {\n        var parents = [];\n        var i;\n        var el;\n        var parent;\n        this.each(function () {\n          parent = this.parentNode;\n          if (inArray(parent, parents) === -1) parents.push(parent);\n        });\n\n        for (i = 0; i < parents[LEXICON.l]; i++) {\n          el = parents[i];\n          parent = el.parentNode;\n\n          while (el.firstChild) {\n            parent.insertBefore(el.firstChild, el);\n          }\n\n          parent.removeChild(el);\n        }\n\n        return this;\n      },\n      wrapAll: function wrapAll(wrapperHTML) {\n        var i;\n        var nodes = this;\n        var wrapper = FakejQuery(wrapperHTML)[0];\n        var deepest = wrapper;\n        var parent = nodes[0].parentNode;\n        var previousSibling = nodes[0].previousSibling;\n\n        while (deepest.childNodes[LEXICON.l] > 0) {\n          deepest = deepest.childNodes[0];\n        }\n\n        for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n          deepest.appendChild(nodes[i]);\n        }\n\n        var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n        parent.insertBefore(wrapper, nextSibling);\n        return this;\n      },\n      wrapInner: function wrapInner(wrapperHTML) {\n        return this.each(function () {\n          var el = FakejQuery(this);\n          var contents = el.contents();\n          if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n        });\n      },\n      wrap: function wrap(wrapperHTML) {\n        return this.each(function () {\n          FakejQuery(this).wrapAll(wrapperHTML);\n        });\n      },\n      //DOM NODE MANIPULATION / INFORMATION:\n      css: function css(styles, val) {\n        var el;\n        var key;\n        var cptStyle;\n        var getCptStyle = window.getComputedStyle;\n\n        if (_type(styles) == TYPES.s) {\n          if (val === undefined) {\n            el = this[0];\n            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n          } else {\n            return this.each(function () {\n              setCSSVal(this, styles, val);\n            });\n          }\n        } else {\n          return this.each(function () {\n            for (key in styles) {\n              setCSSVal(this, key, styles[key]);\n            }\n          });\n        }\n      },\n      hasClass: function hasClass(className) {\n        var elem,\n            i = 0;\n        var classNamePrepared = _strSpace + className + _strSpace;\n        var classList;\n\n        while (elem = this[i++]) {\n          classList = elem.classList;\n          if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n        }\n\n        return false;\n      },\n      addClass: function addClass(className) {\n        var classes;\n        var elem;\n        var cur;\n        var curValue;\n        var clazz;\n        var finalValue;\n        var supportClassList;\n        var elmClassList;\n        var i = 0;\n        var v = 0;\n\n        if (className) {\n          classes = className.match(_rnothtmlwhite) || [];\n\n          while (elem = this[i++]) {\n            elmClassList = elem.classList;\n            if (supportClassList === undefined) supportClassList = elmClassList !== undefined;\n\n            if (supportClassList) {\n              while (clazz = classes[v++]) {\n                elmClassList.add(clazz);\n              }\n            } else {\n              curValue = elem.className + _strEmpty;\n              cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n              if (cur) {\n                while (clazz = classes[v++]) {\n                  if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                }\n\n                finalValue = stripAndCollapse(cur);\n                if (curValue !== finalValue) elem.className = finalValue;\n              }\n            }\n          }\n        }\n\n        return this;\n      },\n      removeClass: function removeClass(className) {\n        var classes;\n        var elem;\n        var cur;\n        var curValue;\n        var clazz;\n        var finalValue;\n        var supportClassList;\n        var elmClassList;\n        var i = 0;\n        var v = 0;\n\n        if (className) {\n          classes = className.match(_rnothtmlwhite) || [];\n\n          while (elem = this[i++]) {\n            elmClassList = elem.classList;\n            if (supportClassList === undefined) supportClassList = elmClassList !== undefined;\n\n            if (supportClassList) {\n              while (clazz = classes[v++]) {\n                elmClassList.remove(clazz);\n              }\n            } else {\n              curValue = elem.className + _strEmpty;\n              cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n              if (cur) {\n                while (clazz = classes[v++]) {\n                  while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                    cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                  }\n                }\n\n                finalValue = stripAndCollapse(cur);\n                if (curValue !== finalValue) elem.className = finalValue;\n              }\n            }\n          }\n        }\n\n        return this;\n      },\n      hide: function hide() {\n        return this.each(function () {\n          this[LEXICON.s].display = 'none';\n        });\n      },\n      show: function show() {\n        return this.each(function () {\n          this[LEXICON.s].display = 'block';\n        });\n      },\n      attr: function attr(attrName, value) {\n        var i = 0;\n        var el;\n\n        while (el = this[i++]) {\n          if (value === undefined) return el.getAttribute(attrName);\n          el.setAttribute(attrName, value);\n        }\n\n        return this;\n      },\n      removeAttr: function removeAttr(attrName) {\n        return this.each(function () {\n          this.removeAttribute(attrName);\n        });\n      },\n      offset: function offset() {\n        var el = this[0];\n        var rect = el[LEXICON.bCR]();\n        var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n        var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n        return {\n          top: rect.top + scrollTop,\n          left: rect.left + scrollLeft\n        };\n      },\n      position: function position() {\n        var el = this[0];\n        return {\n          top: el.offsetTop,\n          left: el.offsetLeft\n        };\n      },\n      scrollLeft: function scrollLeft(value) {\n        var i = 0;\n        var el;\n\n        while (el = this[i++]) {\n          if (value === undefined) return el[_strScrollLeft];\n          el[_strScrollLeft] = value;\n        }\n\n        return this;\n      },\n      scrollTop: function scrollTop(value) {\n        var i = 0;\n        var el;\n\n        while (el = this[i++]) {\n          if (value === undefined) return el[_strScrollTop];\n          el[_strScrollTop] = value;\n        }\n\n        return this;\n      },\n      val: function val(value) {\n        var el = this[0];\n        if (!value) return el.value;\n        el.value = value;\n        return this;\n      },\n      //DOM TRAVERSAL / FILTERING:\n      first: function first() {\n        return this.eq(0);\n      },\n      last: function last() {\n        return this.eq(-1);\n      },\n      eq: function eq(index) {\n        return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n      },\n      find: function find(selector) {\n        var children = [];\n        var i;\n        this.each(function () {\n          var el = this;\n          var ch = el.querySelectorAll(selector);\n\n          for (i = 0; i < ch[LEXICON.l]; i++) {\n            children.push(ch[i]);\n          }\n        });\n        return FakejQuery(children);\n      },\n      children: function children(selector) {\n        var children = [];\n        var el;\n        var ch;\n        var i;\n        this.each(function () {\n          ch = this.children;\n\n          for (i = 0; i < ch[LEXICON.l]; i++) {\n            el = ch[i];\n\n            if (selector) {\n              if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n            } else children.push(el);\n          }\n        });\n        return FakejQuery(children);\n      },\n      parent: function parent(selector) {\n        var parents = [];\n        var parent;\n        this.each(function () {\n          parent = this.parentNode;\n          if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n        });\n        return FakejQuery(parents);\n      },\n      is: function is(selector) {\n        var el;\n        var i;\n\n        for (i = 0; i < this[LEXICON.l]; i++) {\n          el = this[i];\n          if (selector === ':visible') return elementIsVisible(el);\n          if (selector === ':hidden') return !elementIsVisible(el);\n          if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n        }\n\n        return false;\n      },\n      contents: function contents() {\n        var contents = [];\n        var childs;\n        var i;\n        this.each(function () {\n          childs = this.childNodes;\n\n          for (i = 0; i < childs[LEXICON.l]; i++) {\n            contents.push(childs[i]);\n          }\n        });\n        return FakejQuery(contents);\n      },\n      each: function each(callback) {\n        return _each(this, callback);\n      },\n      //ANIMATION:\n      animate: function animate(props, duration, easing, complete) {\n        return this.each(function () {\n          _animate(this, props, duration, easing, complete);\n        });\n      },\n      stop: function stop(clearQ, jump) {\n        return this.each(function () {\n          _stop(this, clearQ, jump);\n        });\n      }\n    };\n    extend(FakejQuery, {\n      extend: extend,\n      inArray: inArray,\n      isEmptyObject: isEmptyObject,\n      isPlainObject: isPlainObject,\n      each: _each\n    });\n    return FakejQuery;\n  }();\n\n  var INSTANCES = function () {\n    var _targets = [];\n    var _instancePropertyString = '__overlayScrollbars__';\n    /**\r\n     * Register, unregister or get a certain (or all) instances.\r\n     * Register: Pass the target and the instance.\r\n     * Unregister: Pass the target and null.\r\n     * Get Instance: Pass the target from which the instance shall be got.\r\n     * Get Targets: Pass no arguments.\r\n     * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n     * @param instance The instance.\r\n     * @returns {*|void} Returns the instance from the given target.\r\n     */\n\n    return function (target, instance) {\n      var argLen = arguments[LEXICON.l];\n\n      if (argLen < 1) {\n        //return all targets\n        return _targets;\n      } else {\n        if (instance) {\n          //register instance\n          target[_instancePropertyString] = instance;\n\n          _targets.push(target);\n        } else {\n          var index = COMPATIBILITY.inA(target, _targets);\n\n          if (index > -1) {\n            if (argLen > 1) {\n              //unregister instance\n              delete target[_instancePropertyString];\n\n              _targets.splice(index, 1);\n            } else {\n              //get instance from target\n              return _targets[index][_instancePropertyString];\n            }\n          }\n        }\n      }\n    };\n  }();\n\n  var PLUGIN = function () {\n    var _plugin;\n\n    var _pluginsGlobals;\n\n    var _pluginsAutoUpdateLoop;\n\n    var _pluginsExtensions = [];\n\n    var _pluginsOptions = function () {\n      var type = COMPATIBILITY.type;\n      var possibleTemplateTypes = [TYPES.b, //boolean\n      TYPES.n, //number\n      TYPES.s, //string\n      TYPES.a, //array\n      TYPES.o, //object\n      TYPES.f, //function\n      TYPES.z //null\n      ];\n      var restrictedStringsSplit = ' ';\n      var restrictedStringsPossibilitiesSplit = ':';\n      var classNameAllowedValues = [TYPES.z, TYPES.s];\n      var numberAllowedValues = TYPES.n;\n      var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n      var booleanTrueTemplate = [true, TYPES.b];\n      var booleanFalseTemplate = [false, TYPES.b];\n      var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n      var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n      var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n      var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n      var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n      var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n      var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n      var optionsDefaultsAndTemplate = {\n        className: ['os-theme-dark', classNameAllowedValues],\n        //null || string\n        resize: ['none', resizeAllowedValues],\n        //none || both  || horizontal || vertical || n || b || h || v\n        sizeAutoCapable: booleanTrueTemplate,\n        //true || false\n        clipAlways: booleanTrueTemplate,\n        //true || false\n        normalizeRTL: booleanTrueTemplate,\n        //true || false\n        paddingAbsolute: booleanFalseTemplate,\n        //true || false\n        autoUpdate: [null, booleanNullAllowedValues],\n        //true || false || null\n        autoUpdateInterval: [33, numberAllowedValues],\n        //number\n        updateOnLoad: updateOnLoadTemplate,\n        //string || array || null\n        nativeScrollbarsOverlaid: {\n          showNativeScrollbars: booleanFalseTemplate,\n          //true || false\n          initialize: booleanTrueTemplate //true || false\n\n        },\n        overflowBehavior: {\n          x: ['scroll', overflowBehaviorAllowedValues],\n          //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n          y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n        },\n        scrollbars: {\n          visibility: ['auto', scrollbarsVisibilityAllowedValues],\n          //visible || hidden || auto || v || h || a\n          autoHide: ['never', scrollbarsAutoHideAllowedValues],\n          //never || scroll || leave || move || n || s || l || m\n          autoHideDelay: [800, numberAllowedValues],\n          //number\n          dragScrolling: booleanTrueTemplate,\n          //true || false\n          clickScrolling: booleanFalseTemplate,\n          //true || false\n          touchSupport: booleanTrueTemplate,\n          //true || false\n          snapHandle: booleanFalseTemplate //true || false\n\n        },\n        textarea: {\n          dynWidth: booleanFalseTemplate,\n          //true || false\n          dynHeight: booleanFalseTemplate,\n          //true || false\n          inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n        },\n        callbacks: {\n          onInitialized: callbackTemplate,\n          //null || function\n          onInitializationWithdrawn: callbackTemplate,\n          //null || function\n          onDestroyed: callbackTemplate,\n          //null || function\n          onScrollStart: callbackTemplate,\n          //null || function\n          onScroll: callbackTemplate,\n          //null || function\n          onScrollStop: callbackTemplate,\n          //null || function\n          onOverflowChanged: callbackTemplate,\n          //null || function\n          onOverflowAmountChanged: callbackTemplate,\n          //null || function\n          onDirectionChanged: callbackTemplate,\n          //null || function\n          onContentSizeChanged: callbackTemplate,\n          //null || function\n          onHostSizeChanged: callbackTemplate,\n          //null || function\n          onUpdated: callbackTemplate //null || function\n\n        }\n      };\n\n      var convert = function convert(template) {\n        var recursive = function recursive(obj) {\n          var key;\n          var val;\n          var valType;\n\n          for (key in obj) {\n            if (!obj[LEXICON.hOP](key)) continue;\n            val = obj[key];\n            valType = type(val);\n            if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n          }\n\n          return obj;\n        };\n\n        return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n      };\n\n      return {\n        _defaults: convert(),\n        _template: convert(true),\n\n        /**\r\n         * Validates the passed object by the passed template.\r\n         * @param obj The object which shall be validated.\r\n         * @param template The template which defines the allowed values and types.\r\n         * @param writeErrors True if errors shall be logged to the console.\r\n         * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n         * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n         */\n        _validate: function _validate(obj, template, writeErrors, diffObj) {\n          var validatedOptions = {};\n          var validatedOptionsPrepared = {};\n          var objectCopy = FRAMEWORK.extend(true, {}, obj);\n          var inArray = FRAMEWORK.inArray;\n          var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n          var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n            for (var prop in template) {\n              if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                var isValid = false;\n                var isDiff = false;\n                var templateValue = template[prop];\n                var templateValueType = type(templateValue);\n                var templateIsComplex = templateValueType == TYPES.o;\n                var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                var dataDiffValue = diffData[prop];\n                var dataValue = data[prop];\n                var dataValueType = type(dataValue);\n                var propPrefix = prevPropName ? prevPropName + '.' : '';\n                var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                var errorPossibleTypes = [];\n                var errorRestrictedStrings = [];\n                var restrictedStringValuesSplit;\n                var restrictedStringValuesPossibilitiesSplit;\n                var isRestrictedValue;\n                var mainPossibility;\n                var currType;\n                var i;\n                var v;\n                var j;\n                dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                if (templateIsComplex && dataValueType == TYPES.o) {\n                  validatedOptions[prop] = {};\n                  validatedOptionsPrepared[prop] = {};\n                  checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                  FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                    if (isEmptyObj(value[prop])) {\n                      delete value[prop];\n                    }\n                  });\n                } else if (!templateIsComplex) {\n                  for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                    currType = templateTypes[i];\n                    templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                    isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                    if (isRestrictedValue) {\n                      errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                      restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                      errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                      for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                        //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                        restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                        mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                        for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                          //if any possibility matches with the dataValue, its valid\n                          if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                            isValid = true;\n                            break;\n                          }\n                        }\n\n                        if (isValid) break;\n                      }\n                    } else {\n                      errorPossibleTypes.push(currType);\n\n                      if (dataValueType === currType) {\n                        isValid = true;\n                        break;\n                      }\n                    }\n                  }\n\n                  if (isValid) {\n                    isDiff = dataValue !== dataDiffValue;\n                    if (isDiff) validatedOptions[prop] = dataValue;\n                    if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                  } else if (writeErrors) {\n                    console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                  }\n\n                  delete data[prop];\n                }\n              }\n            }\n          };\n\n          checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n          /*\r\n          if(keepForeignProps) {\r\n              FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n              FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n          }\r\n          */\n\n          if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n          return {\n            _default: validatedOptions,\n            _prepared: validatedOptionsPrepared\n          };\n        }\n      };\n    }();\n    /**\r\n     * Initializes the object which contains global information about the plugin and each instance of it.\r\n     */\n\n\n    function initOverlayScrollbarsStatics() {\n      if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n      if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n    }\n    /**\r\n     * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n     * @param defaultOptions\r\n     * @constructor\r\n     */\n\n\n    function OverlayScrollbarsGlobals(defaultOptions) {\n      var _base = this;\n\n      var strOverflow = 'overflow';\n      var strHidden = 'hidden';\n      var strScroll = 'scroll';\n      var bodyElement = FRAMEWORK('body');\n      var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n      var scrollbarDummyElement0 = scrollbarDummyElement[0];\n      var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n      bodyElement.append(scrollbarDummyElement);\n      scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n      var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n      var nativeScrollbarIsOverlaid = {\n        x: nativeScrollbarSize.x === 0,\n        y: nativeScrollbarSize.y === 0\n      };\n\n      var msie = function () {\n        var ua = window.navigator.userAgent;\n        var strIndexOf = 'indexOf';\n        var strSubString = 'substring';\n        var msie = ua[strIndexOf]('MSIE ');\n        var trident = ua[strIndexOf]('Trident/');\n        var edge = ua[strIndexOf]('Edge/');\n        var rv = ua[strIndexOf]('rv:');\n        var result;\n        var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n        if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n        else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n        return result;\n      }();\n\n      FRAMEWORK.extend(_base, {\n        defaultOptions: defaultOptions,\n        msie: msie,\n        autoUpdateLoop: false,\n        autoUpdateRecommended: !COMPATIBILITY.mO(),\n        nativeScrollbarSize: nativeScrollbarSize,\n        nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n        nativeScrollbarStyling: function () {\n          var result = false;\n          scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n          try {\n            result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n          } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n          //and set overflow to scroll\n          //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n          //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n          return result;\n        }(),\n        overlayScrollbarDummySize: {\n          x: 30,\n          y: 30\n        },\n        cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n        restrictedMeasuring: function () {\n          //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n          //since 1.11.0 always false -> fixed via CSS (hopefully)\n          scrollbarDummyElement.css(strOverflow, strHidden);\n          var scrollSize = {\n            w: scrollbarDummyElement0[LEXICON.sW],\n            h: scrollbarDummyElement0[LEXICON.sH]\n          };\n          scrollbarDummyElement.css(strOverflow, 'visible');\n          var scrollSize2 = {\n            w: scrollbarDummyElement0[LEXICON.sW],\n            h: scrollbarDummyElement0[LEXICON.sH]\n          };\n          return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n        }(),\n        rtlScrollBehavior: function () {\n          scrollbarDummyElement.css({\n            'overflow-y': strHidden,\n            'overflow-x': strScroll,\n            'direction': 'rtl'\n          }).scrollLeft(0);\n          var dummyContainerOffset = scrollbarDummyElement.offset();\n          var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n          scrollbarDummyElement.scrollLeft(-999);\n          var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n          return {\n            //origin direction = determines if the zero scroll position is on the left or right side\n            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n            //true = on the left side\n            //false = on the right side\n            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n            //negative = determines if the maximum scroll is positive or negative\n            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n            //true = negative\n            //false = positive\n            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n          };\n        }(),\n        supportTransform: !!VENDORS._cssProperty('transform'),\n        supportTransition: !!VENDORS._cssProperty('transition'),\n        supportPassiveEvents: function () {\n          var supportsPassive = false;\n\n          try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n              get: function get() {\n                supportsPassive = true;\n              }\n            }));\n          } catch (e) {}\n\n          return supportsPassive;\n        }(),\n        supportResizeObserver: !!COMPATIBILITY.rO(),\n        supportMutationObserver: !!COMPATIBILITY.mO()\n      });\n      scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n      (function () {\n        if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n        var abs = MATH.abs;\n        var windowWidth = COMPATIBILITY.wW();\n        var windowHeight = COMPATIBILITY.wH();\n        var windowDpr = getWindowDPR();\n\n        var onResize = function onResize() {\n          if (INSTANCES().length > 0) {\n            var newW = COMPATIBILITY.wW();\n            var newH = COMPATIBILITY.wH();\n            var deltaW = newW - windowWidth;\n            var deltaH = newH - windowHeight;\n            if (deltaW === 0 && deltaH === 0) return;\n            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n            var absDeltaW = abs(deltaW);\n            var absDeltaH = abs(deltaH);\n            var absDeltaWRatio = abs(deltaWRatio);\n            var absDeltaHRatio = abs(deltaHRatio);\n            var newDPR = getWindowDPR();\n            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n            var isZoom = deltaIsBigger && difference && dprChanged;\n            var oldScrollbarSize = _base.nativeScrollbarSize;\n            var newScrollbarSize;\n\n            if (isZoom) {\n              bodyElement.append(scrollbarDummyElement);\n              newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n              scrollbarDummyElement.remove();\n\n              if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                FRAMEWORK.each(INSTANCES(), function () {\n                  if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                });\n              }\n            }\n\n            windowWidth = newW;\n            windowHeight = newH;\n            windowDpr = newDPR;\n          }\n        };\n\n        function differenceIsBiggerThanOne(valOne, valTwo) {\n          var absValOne = abs(valOne);\n          var absValTwo = abs(valTwo);\n          return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n        }\n\n        function getWindowDPR() {\n          var dDPI = window.screen.deviceXDPI || 0;\n          var sDPI = window.screen.logicalXDPI || 1;\n          return window.devicePixelRatio || dDPI / sDPI;\n        }\n\n        FRAMEWORK(window).on('resize', onResize);\n      })();\n\n      function calcNativeScrollbarSize(measureElement) {\n        return {\n          x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n          y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n        };\n      }\n    }\n    /**\r\n     * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n     * @constructor\r\n     */\n\n\n    function OverlayScrollbarsAutoUpdateLoop(globals) {\n      var _base = this;\n\n      var _inArray = FRAMEWORK.inArray;\n      var _getNow = COMPATIBILITY.now;\n      var _strAutoUpdate = 'autoUpdate';\n\n      var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n      var _strLength = LEXICON.l;\n      var _loopingInstances = [];\n      var _loopingInstancesIntervalCache = [];\n      var _loopIsActive = false;\n      var _loopIntervalDefault = 33;\n      var _loopInterval = _loopIntervalDefault;\n\n      var _loopTimeOld = _getNow();\n\n      var _loopID;\n      /**\r\n       * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n       */\n\n\n      var loop = function loop() {\n        if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n          _loopID = COMPATIBILITY.rAF()(function () {\n            loop();\n          });\n\n          var timeNew = _getNow();\n\n          var timeDelta = timeNew - _loopTimeOld;\n          var lowestInterval;\n          var instance;\n          var instanceOptions;\n          var instanceAutoUpdateAllowed;\n          var instanceAutoUpdateInterval;\n          var now;\n\n          if (timeDelta > _loopInterval) {\n            _loopTimeOld = timeNew - timeDelta % _loopInterval;\n            lowestInterval = _loopIntervalDefault;\n\n            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n              instance = _loopingInstances[i];\n\n              if (instance !== undefined) {\n                instanceOptions = instance.options();\n                instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                now = _getNow();\n\n                if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                  instance.update('auto');\n                  _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                }\n\n                lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n              }\n            }\n\n            _loopInterval = lowestInterval;\n          }\n        } else {\n          _loopInterval = _loopIntervalDefault;\n        }\n      };\n      /**\r\n       * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n       * @param instance The instance which shall be updated in a loop automatically.\r\n       */\n\n\n      _base.add = function (instance) {\n        if (_inArray(instance, _loopingInstances) === -1) {\n          _loopingInstances.push(instance);\n\n          _loopingInstancesIntervalCache.push(_getNow());\n\n          if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n            _loopIsActive = true;\n            globals.autoUpdateLoop = _loopIsActive;\n            loop();\n          }\n        }\n      };\n      /**\r\n       * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n       * @param instance The instance which shall be updated in a loop automatically.\r\n       */\n\n\n      _base.remove = function (instance) {\n        var index = _inArray(instance, _loopingInstances);\n\n        if (index > -1) {\n          //remove from loopingInstances list\n          _loopingInstancesIntervalCache.splice(index, 1);\n\n          _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n          if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n            _loopIsActive = false;\n            globals.autoUpdateLoop = _loopIsActive;\n\n            if (_loopID !== undefined) {\n              COMPATIBILITY.cAF()(_loopID);\n              _loopID = -1;\n            }\n          }\n        }\n      };\n    }\n    /**\r\n     * A object which manages the scrollbars visibility of the target element.\r\n     * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n     * @param options The custom options.\r\n     * @param extensions The custom extensions.\r\n     * @param globals\r\n     * @param autoUpdateLoop\r\n     * @returns {*}\r\n     * @constructor\r\n     */\n\n\n    function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n      //shortcuts\n      var type = COMPATIBILITY.type;\n      var inArray = FRAMEWORK.inArray;\n      var each = FRAMEWORK.each; //make correct instanceof\n\n      var _base = new _plugin();\n\n      var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n      if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n      if (INSTANCES(pluginTargetElement)) {\n        var inst = INSTANCES(pluginTargetElement);\n        inst.options(options);\n        return inst;\n      } //globals:\n\n\n      var _nativeScrollbarIsOverlaid;\n\n      var _overlayScrollbarDummySize;\n\n      var _rtlScrollBehavior;\n\n      var _autoUpdateRecommended;\n\n      var _msieVersion;\n\n      var _nativeScrollbarStyling;\n\n      var _cssCalc;\n\n      var _nativeScrollbarSize;\n\n      var _supportTransition;\n\n      var _supportTransform;\n\n      var _supportPassiveEvents;\n\n      var _supportResizeObserver;\n\n      var _supportMutationObserver;\n\n      var _restrictedMeasuring; //general readonly:\n\n\n      var _initialized;\n\n      var _destroyed;\n\n      var _isTextarea;\n\n      var _isBody;\n\n      var _documentMixed;\n\n      var _domExists; //general:\n\n\n      var _isBorderBox;\n\n      var _sizeAutoObserverAdded;\n\n      var _paddingX;\n\n      var _paddingY;\n\n      var _borderX;\n\n      var _borderY;\n\n      var _marginX;\n\n      var _marginY;\n\n      var _isRTL;\n\n      var _sleeping;\n\n      var _contentBorderSize = {};\n      var _scrollHorizontalInfo = {};\n      var _scrollVerticalInfo = {};\n      var _viewportSize = {};\n      var _nativeScrollbarMinSize = {}; //naming:\t\n\n      var _strMinusHidden = '-hidden';\n      var _strMarginMinus = 'margin-';\n      var _strPaddingMinus = 'padding-';\n      var _strBorderMinus = 'border-';\n      var _strTop = 'top';\n      var _strRight = 'right';\n      var _strBottom = 'bottom';\n      var _strLeft = 'left';\n      var _strMinMinus = 'min-';\n      var _strMaxMinus = 'max-';\n      var _strWidth = 'width';\n      var _strHeight = 'height';\n      var _strFloat = 'float';\n      var _strEmpty = '';\n      var _strAuto = 'auto';\n      var _strSync = 'sync';\n      var _strScroll = 'scroll';\n      var _strHundredPercent = '100%';\n      var _strX = 'x';\n      var _strY = 'y';\n      var _strDot = '.';\n      var _strSpace = ' ';\n      var _strScrollbar = 'scrollbar';\n      var _strMinusHorizontal = '-horizontal';\n      var _strMinusVertical = '-vertical';\n\n      var _strScrollLeft = _strScroll + 'Left';\n\n      var _strScrollTop = _strScroll + 'Top';\n\n      var _strMouseTouchDownEvent = 'mousedown touchstart';\n      var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n      var _strMouseTouchMoveEvent = 'mousemove touchmove';\n      var _strMouseEnter = 'mouseenter';\n      var _strMouseLeave = 'mouseleave';\n      var _strKeyDownEvent = 'keydown';\n      var _strKeyUpEvent = 'keyup';\n      var _strSelectStartEvent = 'selectstart';\n      var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n      var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n      var _cassNamesPrefix = 'os-';\n\n      var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n      var _classNameHostElement = _cassNamesPrefix + 'host';\n\n      var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n      var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n      var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n      var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n      var _classNameHostTransition = _classNameHostElement + '-transition';\n\n      var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n      var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n      var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n      var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n      var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n      var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n      var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n      var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n      var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n      var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n      var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n      var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n      var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n      var _classNameContentElement = _cassNamesPrefix + 'content';\n\n      var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n      var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n      var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n      var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n      var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n      var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n      var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n      var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n      var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n      var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n      var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n      var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n      var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n      var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n      var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n      var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n      var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n      var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n      var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n      var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n      var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n      var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n      var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n      var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n      var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n      var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n      var _defaultOptions;\n\n      var _currentOptions;\n\n      var _currentPreparedOptions; //extensions:\t\n\n\n      var _extensions = {};\n      var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n      var _lastUpdateTime;\n\n      var _swallowedUpdateHints = {};\n\n      var _swallowedUpdateTimeout;\n\n      var _swallowUpdateLag = 42;\n      var _updateOnLoadEventName = 'load';\n      var _updateOnLoadElms = []; //DOM elements:\t\n\n      var _windowElement;\n\n      var _documentElement;\n\n      var _htmlElement;\n\n      var _bodyElement;\n\n      var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n      var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n      var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n      var _sizeObserverElement; //observes size and padding changes\t\n\n\n      var _paddingElement; //manages the padding\t\n\n\n      var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n      var _contentElement; //the element which holds the content\t\n\n\n      var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n      var _contentGlueElement; //has always the size of the content element\t\n\n\n      var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n      var _scrollbarCornerElement;\n\n      var _scrollbarHorizontalElement;\n\n      var _scrollbarHorizontalTrackElement;\n\n      var _scrollbarHorizontalHandleElement;\n\n      var _scrollbarVerticalElement;\n\n      var _scrollbarVerticalTrackElement;\n\n      var _scrollbarVerticalHandleElement;\n\n      var _windowElementNative;\n\n      var _documentElementNative;\n\n      var _targetElementNative;\n\n      var _hostElementNative;\n\n      var _sizeAutoObserverElementNative;\n\n      var _sizeObserverElementNative;\n\n      var _paddingElementNative;\n\n      var _viewportElementNative;\n\n      var _contentElementNative; //Cache:\t\n\n\n      var _hostSizeCache;\n\n      var _contentScrollSizeCache;\n\n      var _arrangeContentSizeCache;\n\n      var _hasOverflowCache;\n\n      var _hideOverflowCache;\n\n      var _widthAutoCache;\n\n      var _heightAutoCache;\n\n      var _cssBoxSizingCache;\n\n      var _cssPaddingCache;\n\n      var _cssBorderCache;\n\n      var _cssMarginCache;\n\n      var _cssDirectionCache;\n\n      var _cssDirectionDetectedCache;\n\n      var _paddingAbsoluteCache;\n\n      var _clipAlwaysCache;\n\n      var _contentGlueSizeCache;\n\n      var _overflowBehaviorCache;\n\n      var _overflowAmountCache;\n\n      var _ignoreOverlayScrollbarHidingCache;\n\n      var _autoUpdateCache;\n\n      var _sizeAutoCapableCache;\n\n      var _contentElementScrollSizeChangeDetectedCache;\n\n      var _hostElementSizeChangeDetectedCache;\n\n      var _scrollbarsVisibilityCache;\n\n      var _scrollbarsAutoHideCache;\n\n      var _scrollbarsClickScrollingCache;\n\n      var _scrollbarsDragScrollingCache;\n\n      var _resizeCache;\n\n      var _normalizeRTLCache;\n\n      var _classNameCache;\n\n      var _oldClassName;\n\n      var _textareaAutoWrappingCache;\n\n      var _textareaInfoCache;\n\n      var _textareaSizeCache;\n\n      var _textareaDynHeightCache;\n\n      var _textareaDynWidthCache;\n\n      var _bodyMinSizeCache;\n\n      var _updateAutoCache = {}; //MutationObserver:\t\n\n      var _mutationObserverHost;\n\n      var _mutationObserverContent;\n\n      var _mutationObserverHostCallback;\n\n      var _mutationObserverContentCallback;\n\n      var _mutationObserversConnected;\n\n      var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n      var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n      var _destroyEvents = []; //textarea:\t\n\n      var _textareaHasFocus; //scrollbars:\t\n\n\n      var _scrollbarsAutoHideTimeoutId;\n\n      var _scrollbarsAutoHideMoveTimeoutId;\n\n      var _scrollbarsAutoHideDelay;\n\n      var _scrollbarsAutoHideNever;\n\n      var _scrollbarsAutoHideScroll;\n\n      var _scrollbarsAutoHideMove;\n\n      var _scrollbarsAutoHideLeave;\n\n      var _scrollbarsHandleHovered;\n\n      var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n      var _resizeNone;\n\n      var _resizeBoth;\n\n      var _resizeHorizontal;\n\n      var _resizeVertical; //==== Event Listener ====//\t\n\n      /**\t\r\n       * Adds or removes a event listener from the given element. \t\r\n       * @param element The element to which the event listener shall be applied or removed.\t\r\n       * @param eventNames The name(s) of the events.\t\r\n       * @param listener The method which shall be called.\t\r\n       * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n       * @param passiveOrOptions The options for the event.\r\n       */\n\n\n      function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n        var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n        var method = remove ? 'removeEventListener' : 'addEventListener';\n        var onOff = remove ? 'off' : 'on';\n        var events = collected ? false : eventNames.split(_strSpace);\n        var i = 0;\n        var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n        var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive || false : passiveOrOptions);\n        var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n        var useNative = capture || passive;\n        var nativeParam = passive ? {\n          passive: passive,\n          capture: capture\n        } : capture;\n\n        if (collected) {\n          for (; i < eventNames[LEXICON.l]; i++) {\n            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n          }\n        } else {\n          for (; i < events[LEXICON.l]; i++) {\n            if (useNative) {\n              element[0][method](events[i], listener, nativeParam);\n            } else {\n              element[onOff](events[i], listener);\n            }\n          }\n        }\n      }\n\n      function addDestroyEventListener(element, eventNames, listener, passive) {\n        setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n        _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n      } //==== Resize Observer ====//\n\n      /**\r\n       * Adds or removes a resize observer from the given element.\r\n       * @param targetElement The element to which the resize observer shall be added or removed.\r\n       * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n       */\n\n\n      function setupResizeObserver(targetElement, onElementResizedCallback) {\n        if (targetElement) {\n          var resizeObserver = COMPATIBILITY.rO();\n          var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n          var strChildNodes = 'childNodes';\n          var constScroll = 3333333;\n\n          var callback = function callback() {\n            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n            onElementResizedCallback();\n          }; //add resize observer:\n\n\n          if (onElementResizedCallback) {\n            if (_supportResizeObserver) {\n              var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n              var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n              observer.observe(element);\n            } else {\n              if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                  c: _classNameResizeObserverItemElement,\n                  dir: 'ltr'\n                }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                  c: _classNameResizeObserverItemFinalElement,\n                  style: 'width: 200%; height: 200%'\n                })))));\n                var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                var widthCache = observerElement[LEXICON.oW];\n                var heightCache = observerElement[LEXICON.oH];\n                var isDirty;\n                var rAFId;\n                var currWidth;\n                var currHeight;\n                var factor = 2;\n                var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                var reset = function reset() {\n                  /*\r\n                   var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                   var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                   var expandChildCSS = {};\r\n                   expandChildCSS[_strWidth] = sizeResetWidth;\r\n                   expandChildCSS[_strHeight] = sizeResetHeight;\r\n                   expandElementChild.css(expandChildCSS);\r\n                       expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                   shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                   */\n                  expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                  shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                };\n\n                var onResized = function onResized() {\n                  rAFId = 0;\n                  if (!isDirty) return;\n                  widthCache = currWidth;\n                  heightCache = currHeight;\n                  callback();\n                };\n\n                var onScroll = function onScroll(event) {\n                  currWidth = observerElement[LEXICON.oW];\n                  currHeight = observerElement[LEXICON.oH];\n                  isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                  if (event && isDirty && !rAFId) {\n                    COMPATIBILITY.cAF()(rAFId);\n                    rAFId = COMPATIBILITY.rAF()(onResized);\n                  } else if (!event) onResized();\n\n                  reset();\n\n                  if (event) {\n                    COMPATIBILITY.prvD(event);\n                    COMPATIBILITY.stpP(event);\n                  }\n\n                  return false;\n                };\n\n                var expandChildCSS = {};\n                var observerElementCSS = {};\n                setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                FRAMEWORK(observerElement).css(observerElementCSS);\n                expandElement.on(_strScroll, onScroll);\n                shrinkElement.on(_strScroll, onScroll);\n                targetElement.on(strAnimationStartEvent, function () {\n                  onScroll(false);\n                }); //lets assume that the divs will never be that large and a constant value is enough\n\n                expandChildCSS[_strWidth] = constScroll;\n                expandChildCSS[_strHeight] = constScroll;\n                expandElementChild.css(expandChildCSS);\n                reset();\n              } else {\n                var attachEvent = _documentElementNative.attachEvent;\n                var isIE = _msieVersion !== undefined;\n\n                if (attachEvent) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                  findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                } else {\n                  var obj = _documentElementNative.createElement(TYPES.o);\n\n                  obj.setAttribute(LEXICON.ti, '-1');\n                  obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                  obj.onload = function () {\n                    var wnd = this.contentDocument.defaultView;\n                    wnd.addEventListener('resize', callback);\n                    wnd.document.documentElement.style.display = 'none';\n                  };\n\n                  obj.type = 'text/html';\n                  if (isIE) targetElement.prepend(obj);\n                  obj.data = 'about:blank';\n                  if (!isIE) targetElement.prepend(obj);\n                  targetElement.on(strAnimationStartEvent, callback);\n                }\n              }\n            }\n\n            if (targetElement[0] === _sizeObserverElementNative) {\n              var directionChanged = function directionChanged() {\n                var dir = _hostElement.css('direction');\n\n                var css = {};\n                var scrollLeftValue = 0;\n                var result = false;\n\n                if (dir !== _cssDirectionDetectedCache) {\n                  if (dir === 'ltr') {\n                    css[_strLeft] = 0;\n                    css[_strRight] = _strAuto;\n                    scrollLeftValue = constScroll;\n                  } else {\n                    css[_strLeft] = _strAuto;\n                    css[_strRight] = 0;\n                    scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                  } //execution order is important for IE!!!\n\n\n                  _sizeObserverElement.children().eq(0).css(css);\n\n                  _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                  _cssDirectionDetectedCache = dir;\n                  result = true;\n                }\n\n                return result;\n              };\n\n              directionChanged();\n              addDestroyEventListener(targetElement, _strScroll, function (event) {\n                if (directionChanged()) update();\n                COMPATIBILITY.prvD(event);\n                COMPATIBILITY.stpP(event);\n                return false;\n              });\n            }\n          } //remove resize observer:\n          else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n        }\n      }\n      /**\r\n       * Freezes or unfreezes the given resize observer.\r\n       * @param targetElement The element to which the target resize observer is applied.\r\n       * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n       \r\n      function freezeResizeObserver(targetElement, freeze) {\r\n          if (targetElement !== undefined) {\r\n              if(freeze) {\r\n                  if (_supportResizeObserver) {\r\n                      var element = targetElement.contents()[0];\r\n                      element[_strResizeObserverProperty].unobserve(element);\r\n                  }\r\n                  else {\r\n                      targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                      var w = targetElement.css(_strWidth);\r\n                      var h = targetElement.css(_strHeight);\r\n                      var css = {};\r\n                      css[_strWidth] = w;\r\n                      css[_strHeight] = h;\r\n                      targetElement.css(css);\r\n                  }\r\n              }\r\n              else {\r\n                  if (_supportResizeObserver) {\r\n                      var element = targetElement.contents()[0];\r\n                      element[_strResizeObserverProperty].observe(element);\r\n                  }\r\n                  else {\r\n                      var css = { };\r\n                      css[_strHeight] = _strEmpty;\r\n                      css[_strWidth] = _strEmpty;\r\n                      targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      */\n      //==== Mutation Observers ====//\n\n      /**\r\n       * Creates MutationObservers for the host and content Element if they are supported.\r\n       */\n\n\n      function createMutationObservers() {\n        if (_supportMutationObserver) {\n          var mutationObserverContentLag = 11;\n          var mutationObserver = COMPATIBILITY.mO();\n          var contentLastUpdate = COMPATIBILITY.now();\n          var mutationTarget;\n          var mutationAttrName;\n          var mutationIsClass;\n          var oldMutationVal;\n          var newClassVal;\n          var hostClassNameRegex;\n          var contentTimeout;\n          var now;\n          var sizeAuto;\n          var action;\n\n          _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n            var doUpdate = false;\n            var doUpdateForce = false;\n            var mutation;\n            var mutatedAttrs = [];\n\n            if (_initialized && !_sleeping) {\n              each(mutations, function () {\n                mutation = this;\n                mutationTarget = mutation.target;\n                mutationAttrName = mutation.attributeName;\n                mutationIsClass = mutationAttrName === LEXICON.c;\n                oldMutationVal = mutation.oldValue;\n                newClassVal = mutationTarget.className;\n\n                if (_domExists && mutationIsClass && !doUpdateForce) {\n                  // if old class value contains _classNameHostElementForeign and new class value doesn't\n                  if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                    hostClassNameRegex = createHostClassNameRegExp(true);\n                    _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                      return name.match(hostClassNameRegex);\n                    })).join(_strSpace);\n                    doUpdate = doUpdateForce = true;\n                  }\n                }\n\n                if (!doUpdate) {\n                  doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                }\n\n                mutatedAttrs.push(mutationAttrName);\n              });\n              updateViewportAttrsFromTarget(mutatedAttrs);\n              if (doUpdate) _base.update(doUpdateForce || _strAuto);\n            }\n\n            return doUpdate;\n          };\n\n          _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n            var doUpdate = false;\n            var mutation;\n\n            if (_initialized && !_sleeping) {\n              each(mutations, function () {\n                mutation = this;\n                doUpdate = isUnknownMutation(mutation);\n                return !doUpdate;\n              });\n\n              if (doUpdate) {\n                now = COMPATIBILITY.now();\n                sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                action = function action() {\n                  if (!_destroyed) {\n                    contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                    if (_isTextarea) textareaUpdate();\n                    if (sizeAuto) update();else _base.update(_strAuto);\n                  }\n                };\n\n                clearTimeout(contentTimeout);\n                if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n              }\n            }\n\n            return doUpdate;\n          };\n\n          _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n          _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n        }\n      }\n      /**\r\n       * Connects the MutationObservers if they are supported.\r\n       */\n\n\n      function connectMutationObservers() {\n        if (_supportMutationObserver && !_mutationObserversConnected) {\n          _mutationObserverHost.observe(_hostElementNative, {\n            attributes: true,\n            attributeOldValue: true,\n            attributeFilter: _mutationObserverAttrsHost\n          });\n\n          _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n            attributes: true,\n            attributeOldValue: true,\n            subtree: !_isTextarea,\n            childList: !_isTextarea,\n            characterData: !_isTextarea,\n            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n          });\n\n          _mutationObserversConnected = true;\n        }\n      }\n      /**\r\n       * Disconnects the MutationObservers if they are supported.\r\n       */\n\n\n      function disconnectMutationObservers() {\n        if (_supportMutationObserver && _mutationObserversConnected) {\n          _mutationObserverHost.disconnect();\n\n          _mutationObserverContent.disconnect();\n\n          _mutationObserversConnected = false;\n        }\n      } //==== Events of elements ====//\n\n      /**\r\n       * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n       * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n       * If there are any size changes, the update method gets called.\r\n       */\n\n\n      function hostOnResized() {\n        if (!_sleeping) {\n          var changed;\n          var hostSize = {\n            w: _sizeObserverElementNative[LEXICON.sW],\n            h: _sizeObserverElementNative[LEXICON.sH]\n          };\n          changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n          _hostElementSizeChangeDetectedCache = hostSize;\n          if (changed) update({\n            _hostSizeChanged: true\n          });\n        }\n      }\n      /**\r\n       * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n       */\n\n\n      function hostOnMouseEnter() {\n        if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n      }\n      /**\r\n       * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n       */\n\n\n      function hostOnMouseLeave() {\n        if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n      }\n      /**\r\n       * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n       */\n\n\n      function hostOnMouseMove() {\n        if (_scrollbarsAutoHideMove) {\n          refreshScrollbarsAutoHide(true);\n          clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n          _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n            if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n          }, 100);\n        }\n      }\n      /**\r\n       * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n       * @param event The select start event.\r\n       */\n\n\n      function documentOnSelectStart(event) {\n        COMPATIBILITY.prvD(event);\n        return false;\n      }\n      /**\t\r\n       * A callback which will be called after a element has loaded.\t\r\n       */\n\n\n      function updateOnLoadCallback(event) {\n        var elm = FRAMEWORK(event.target);\n        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n          if (elm.is(updateOnLoadSelector)) {\n            update({\n              _contentSizeChanged: true\n            });\n          }\n        });\n      }\n      /**\r\n      * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n      * @param destroy Indicates whether the events shall be added or removed.\r\n      */\n\n\n      function setupHostMouseTouchEvents(destroy) {\n        if (!destroy) setupHostMouseTouchEvents(true);\n        setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n        setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n        if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n      } //==== Update Detection ====//\n\n      /**\r\n       * Measures the min width and min height of the body element and refreshes the related cache.\r\n       * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n       */\n\n\n      function bodyMinSizeChanged() {\n        var bodyMinSize = {};\n\n        if (_isBody && _contentArrangeElement) {\n          bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n          bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n          bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n          bodyMinSize.f = true; //flag for \"measured at least once\"\n        }\n\n        _bodyMinSizeCache = bodyMinSize;\n        return !!bodyMinSize.c;\n      }\n      /**\r\n       * Returns true if the class names really changed (new class without plugin host prefix)\r\n       * @param oldClassNames The old ClassName string or array.\r\n       * @param newClassNames The new ClassName string or array.\r\n       * @returns {boolean} True if the class names has really changed, false otherwise.\r\n       */\n\n\n      function hostClassNamesChanged(oldClassNames, newClassNames) {\n        var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\n        var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\n        var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n        var idx = inArray(_classNameThemeNone, diff);\n        var i;\n        var regex;\n        if (idx > -1) diff.splice(idx, 1);\n\n        if (diff[LEXICON.l] > 0) {\n          regex = createHostClassNameRegExp(true, true);\n\n          for (i = 0; i < diff.length; i++) {\n            if (!diff[i].match(regex)) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      }\n      /**\r\n       * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n       * @param mutation The mutation which shall be checked.\r\n       * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n       */\n\n\n      function isUnknownMutation(mutation) {\n        var attributeName = mutation.attributeName;\n        var mutationTarget = mutation.target;\n        var mutationType = mutation.type;\n        var strClosest = 'closest';\n        if (mutationTarget === _contentElementNative) return attributeName === null;\n\n        if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n          //ignore className changes by the plugin\t\n          if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n          if (typeof mutationTarget[strClosest] != TYPES.f) return true;\n          if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n        }\n\n        return true;\n      }\n      /**\r\n       * Returns true if the content size was changed since the last time this method was called.\r\n       * @returns {boolean} True if the content size was changed, false otherwise.\r\n       */\n\n\n      function updateAutoContentSizeChanged() {\n        if (_sleeping) return false;\n        var contentMeasureElement = getContentMeasureElement();\n        var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n        var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n        var css = {};\n        var float;\n        var bodyMinSizeC;\n        var changed;\n        var contentElementScrollSize;\n\n        if (setCSS) {\n          float = _contentElement.css(_strFloat);\n          css[_strFloat] = _isRTL ? _strRight : _strLeft;\n          css[_strWidth] = _strAuto;\n\n          _contentElement.css(css);\n        }\n\n        contentElementScrollSize = {\n          w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n          h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n        };\n\n        if (setCSS) {\n          css[_strFloat] = float;\n          css[_strWidth] = _strHundredPercent;\n\n          _contentElement.css(css);\n        }\n\n        bodyMinSizeC = bodyMinSizeChanged();\n        changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n        _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n        return changed || bodyMinSizeC;\n      }\n      /**\r\n       * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n       * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n       */\n\n\n      function meaningfulAttrsChanged() {\n        if (_sleeping || _mutationObserversConnected) return;\n        var elem;\n        var curr;\n        var cache;\n        var changedAttrs = [];\n        var checks = [{\n          _elem: _hostElement,\n          _attrs: _mutationObserverAttrsHost.concat(':visible')\n        }, {\n          _elem: _isTextarea ? _targetElement : undefined,\n          _attrs: _mutationObserverAttrsTextarea\n        }];\n        each(checks, function (index, check) {\n          elem = check._elem;\n\n          if (elem) {\n            each(check._attrs, function (index, attr) {\n              curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n              cache = _updateAutoCache[attr];\n\n              if (checkCache(curr, cache)) {\n                changedAttrs.push(attr);\n              }\n\n              _updateAutoCache[attr] = curr;\n            });\n          }\n        });\n        updateViewportAttrsFromTarget(changedAttrs);\n        return changedAttrs[LEXICON.l] > 0;\n      }\n      /**\r\n       * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n       * @param propertyName The CSS property name.\r\n       * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n       */\n\n\n      function isSizeAffectingCSSProperty(propertyName) {\n        if (!_initialized) return true;\n        var flexGrow = 'flex-grow';\n        var flexShrink = 'flex-shrink';\n        var flexBasis = 'flex-basis';\n        var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n        var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n        var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n        var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n        var _strS = 's';\n        var _strVS = 'v-s';\n        var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n        var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n        var sizeIsAffected = false;\n\n        var checkPropertyName = function checkPropertyName(arr, name) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            if (arr[i] === name) return true;\n          }\n\n          return false;\n        };\n\n        if (checkY) {\n          sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n          if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n        }\n\n        if (checkX && !sizeIsAffected) {\n          sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n          if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n        }\n\n        return sizeIsAffected;\n      } //==== Update ====//\n\n      /**\r\n       * Sets the attribute values of the viewport element to the values from the target element.\r\n       * The value of a attribute is only set if the attribute is whitelisted.\r\n       * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n       */\n\n\n      function updateViewportAttrsFromTarget(attrs) {\n        attrs = attrs || _viewportAttrsFromTarget;\n        each(attrs, function (index, attr) {\n          if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n            var targetAttr = _targetElement.attr(attr);\n\n            if (type(targetAttr) == TYPES.s) {\n              _viewportElement.attr(attr, targetAttr);\n            } else {\n              _viewportElement.removeAttr(attr);\n            }\n          }\n        });\n      }\n      /**\r\n       * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n       */\n\n\n      function textareaUpdate() {\n        if (!_sleeping) {\n          var wrapAttrOff = !_textareaAutoWrappingCache;\n          var minWidth = _viewportSize.w;\n          var minHeight = _viewportSize.h;\n          var css = {};\n          var doMeasure = _widthAutoCache || wrapAttrOff;\n          var origWidth;\n          var width;\n          var origHeight;\n          var height; //reset min size\n\n          css[_strMinMinus + _strWidth] = _strEmpty;\n          css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n          css[_strWidth] = _strAuto;\n\n          _targetElement.css(css); //measure width\n\n\n          origWidth = _targetElementNative[LEXICON.oW];\n          width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n          /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n          //set measured width\n\n          css[_strWidth] = _widthAutoCache ? _strAuto\n          /*width*/\n          : _strHundredPercent;\n          css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n          css[_strHeight] = _strAuto;\n\n          _targetElement.css(css); //measure height\n\n\n          origHeight = _targetElementNative[LEXICON.oH];\n          height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n          css[_strWidth] = width;\n          css[_strHeight] = height;\n\n          _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n          css[_strMinMinus + _strWidth] = minWidth\n          /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n          ;\n          css[_strMinMinus + _strHeight] = minHeight\n          /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n          ;\n\n          _targetElement.css(css);\n\n          return {\n            _originalWidth: origWidth,\n            _originalHeight: origHeight,\n            _dynamicWidth: width,\n            _dynamicHeight: height\n          };\n        }\n      }\n      /**\r\n       * Updates the plugin and DOM to the current options.\r\n       * This method should only be called if a update is 100% required.\r\n       * @param updateHints A objects which contains hints for this update:\r\n       * {\r\n       *   _hostSizeChanged : boolean,\r\n       *   _contentSizeChanged : boolean,\r\n       *   _force : boolean,                             == preventSwallowing\r\n       *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n      *  }\r\n       */\n\n\n      function update(updateHints) {\n        clearTimeout(_swallowedUpdateTimeout);\n        updateHints = updateHints || {};\n        _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n        _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n        _swallowedUpdateHints._force |= updateHints._force;\n        var now = COMPATIBILITY.now();\n        var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n        var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n        var force = !!_swallowedUpdateHints._force;\n        var changedOptions = updateHints._changedOptions;\n        var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n        var displayIsHidden;\n        if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n        //destroyed\n        //swallowing\n        //sleeping\n        //host is hidden or has false display\n\n        if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n        _lastUpdateTime = now;\n        _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n        if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n          //native scrollbars are hidden, so change the values to zero\n          _nativeScrollbarSize.x = 0;\n          _nativeScrollbarSize.y = 0;\n        } else {\n          //refresh native scrollbar size (in case of zoom)\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n        } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n        // The calculation: [scrollbar size +3 *3]\n        // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n        // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n        _nativeScrollbarMinSize = {\n          x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n          y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n        };\n        changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n        //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n        var checkCacheAutoForce = function checkCacheAutoForce() {\n          return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n        }; //save current scroll offset\n\n\n        var currScroll = {\n          x: _viewportElement[_strScrollLeft](),\n          y: _viewportElement[_strScrollTop]()\n        };\n        var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n        var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n        var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n        var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n        var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n        var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n        var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n        var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n        var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n        var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n        var className = _currentPreparedOptions.className;\n        var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n        var resize = _currentPreparedOptions.resize;\n        var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n        //paddingAbsolute\n\n        var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n        var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n        var clipAlways = _currentPreparedOptions.clipAlways;\n        var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n        var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n        var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n        var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n        var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n        var autoUpdate = _currentPreparedOptions.autoUpdate;\n        var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n        var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n        var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n        var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n        var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n        var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n        var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n        _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n        _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n        _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n        _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n        _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n        _oldClassName = _classNameCache; //resize\n\n        _resizeNone = resize === 'n';\n        _resizeBoth = resize === 'b';\n        _resizeHorizontal = resize === 'h';\n        _resizeVertical = resize === 'v'; //normalizeRTL\n\n        _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n        ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n        _scrollbarsVisibilityCache = scrollbarsVisibility;\n        _scrollbarsAutoHideCache = scrollbarsAutoHide;\n        _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n        _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n        _classNameCache = className;\n        _resizeCache = resize;\n        _paddingAbsoluteCache = paddingAbsolute;\n        _clipAlwaysCache = clipAlways;\n        _sizeAutoCapableCache = sizeAutoCapable;\n        _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n        _autoUpdateCache = autoUpdate;\n        _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n        _textareaDynWidthCache = textareaDynWidth;\n        _textareaDynHeightCache = textareaDynHeight;\n        _hasOverflowCache = _hasOverflowCache || {\n          x: false,\n          y: false\n        }; //set correct class name to the host element\n\n        if (classNameChanged) {\n          removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n          addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\n        } //set correct auto Update\n\n\n        if (autoUpdateChanged) {\n          if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n            disconnectMutationObservers();\n            autoUpdateLoop.add(_base);\n          } else {\n            autoUpdateLoop.remove(_base);\n            connectMutationObservers();\n          }\n        } //activate or deactivate size auto capability\n\n\n        if (sizeAutoCapableChanged) {\n          if (sizeAutoCapable) {\n            if (_contentGlueElement) {\n              _contentGlueElement.show();\n            } else {\n              _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n              _paddingElement.before(_contentGlueElement);\n            }\n\n            if (_sizeAutoObserverAdded) {\n              _sizeAutoObserverElement.show();\n            } else {\n              _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n              _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n              _contentGlueElement.before(_sizeAutoObserverElement);\n\n              var oldSize = {\n                w: -1,\n                h: -1\n              };\n              setupResizeObserver(_sizeAutoObserverElement, function () {\n                var newSize = {\n                  w: _sizeAutoObserverElementNative[LEXICON.oW],\n                  h: _sizeAutoObserverElementNative[LEXICON.oH]\n                };\n\n                if (checkCache(newSize, oldSize)) {\n                  if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                    update();\n                  } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                    update();\n                  }\n                }\n\n                oldSize = newSize;\n              });\n              _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n              //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n              if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n            }\n          } else {\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n            if (_contentGlueElement) _contentGlueElement.hide();\n          }\n        } //if force, update all resizeObservers too\n\n\n        if (force) {\n          _sizeObserverElement.find('*').trigger(_strScroll);\n\n          if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n        } //display hidden:\n\n\n        displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n        var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n        var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n        var cssDirection = _hostElement.css('direction');\n\n        var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n        var boxSizing = _hostElement.css('box-sizing');\n\n        var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n        var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n        var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n        try {\n          sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n        } catch (ex) {\n          return;\n        }\n\n        _isRTL = cssDirection === 'rtl';\n        _isBorderBox = boxSizing === 'border-box';\n        var isRTLLeft = _isRTL ? _strLeft : _strRight;\n        var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n        var widthAutoResizeDetection = false;\n        var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n        /*|| _isTextarea */\n        ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n        if (sizeAutoCapable && !widthAutoObserverDetection) {\n          var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n          var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n          _contentGlueElement.css(_strWidth, _strAuto);\n\n          var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n          _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n          widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n          if (!widthAutoResizeDetection) {\n            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n          }\n        }\n\n        var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n        var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n        var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n        var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0 :\n        /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n        false;\n        var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n        var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n        //we need the border only if border box and auto size\n\n        var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n        var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n        var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n        var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n        var contentElementCSS = {};\n        var contentGlueElementCSS = {}; //funcs\n\n        var getHostSize = function getHostSize() {\n          //has to be clientSize because offsetSize respect borders\n          return {\n            w: _hostElementNative[LEXICON.cW],\n            h: _hostElementNative[LEXICON.cH]\n          };\n        };\n\n        var getViewportSize = function getViewportSize() {\n          //viewport size is padding container because it never has padding, margin and a border\n          //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n          //if this happens add the difference to the viewportSize to compensate the rounding error\n          return {\n            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n          };\n        }; //set info for padding\n\n\n        var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n        var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n        paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n        paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n        padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n        _borderX = border.l + border.r;\n        _borderY = border.t + border.b;\n        border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n        _marginX = margin.l + margin.r;\n        _marginY = margin.t + margin.b;\n        margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n        _textareaAutoWrappingCache = textareaAutoWrapping;\n        _cssDirectionCache = cssDirection;\n        _cssBoxSizingCache = boxSizing;\n        _widthAutoCache = widthAuto;\n        _heightAutoCache = heightAuto;\n        _cssPaddingCache = padding;\n        _cssBorderCache = border;\n        _cssMarginCache = margin; //IEFix direction changed\n\n        if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n        if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n          var paddingElementCSS = {};\n          var textareaCSS = {};\n          var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n          setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n          if (paddingAbsolute) {\n            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n          } else {\n            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n          }\n\n          _paddingElement.css(paddingElementCSS);\n\n          _targetElement.css(textareaCSS);\n        } //viewport size is padding container because it never has padding, margin and a border.\n\n\n        _viewportSize = getViewportSize(); //update Textarea\n\n        var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n        var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n        var textareaDynOrigSize = _isTextarea && textareaSize ? {\n          w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n          h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n        } : {};\n        _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n        if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n          contentElementCSS[_strHeight] = _strAuto;\n        } else if (heightAutoChanged || paddingAbsoluteChanged) {\n          contentElementCSS[_strHeight] = _strHundredPercent;\n        }\n\n        if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n          contentElementCSS[_strWidth] = _strAuto;\n          contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n        } else if (widthAutoChanged || paddingAbsoluteChanged) {\n          contentElementCSS[_strWidth] = _strHundredPercent;\n          contentElementCSS[_strFloat] = _strEmpty;\n          contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n        }\n\n        if (widthAuto) {\n          //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n          contentGlueElementCSS[_strWidth] = _strAuto;\n          contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n          contentElementCSS[_strFloat] = isRTLRight;\n        } else {\n          contentGlueElementCSS[_strWidth] = _strEmpty;\n        }\n\n        if (heightAuto) {\n          //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n          contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n        } else {\n          contentGlueElementCSS[_strHeight] = _strEmpty;\n        }\n\n        if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n        _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n        contentElementCSS = {};\n        contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n        if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n          var strOverflow = 'overflow';\n          var strOverflowX = strOverflow + '-x';\n          var strOverflowY = strOverflow + '-y';\n          var strHidden = 'hidden';\n          var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n          //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n          if (!_nativeScrollbarStyling) {\n            var viewportElementResetCSS = {};\n            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n            _viewportElement.css(viewportElementResetCSS);\n          } //measure several sizes:\n\n\n          var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n          var contentSize = {\n            //use clientSize because natively overlaidScrollbars add borders\n            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n          };\n          var scrollSize = {\n            w: contentMeasureElement[LEXICON.sW],\n            h: contentMeasureElement[LEXICON.sH]\n          }; //apply the correct viewport style and measure viewport size\n\n          if (!_nativeScrollbarStyling) {\n            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n            _viewportElement.css(viewportElementResetCSS);\n          }\n\n          _viewportSize = getViewportSize(); //measure and correct several sizes\n\n          var hostSize = getHostSize();\n          var hostAbsoluteRectSize = {\n            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n          };\n          var contentGlueSize = {\n            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n          };\n          contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n          _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n          if (sizeAutoCapable) {\n            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n            if (contentGlueSize.c || heightAuto || widthAuto) {\n              contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n              contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n              if (!_isTextarea) {\n                contentSize = {\n                  //use clientSize because natively overlaidScrollbars add borders\n                  w: contentMeasureElement[LEXICON.cW],\n                  h: contentMeasureElement[LEXICON.cH]\n                };\n              }\n            }\n\n            var textareaCoverCSS = {};\n\n            var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var wh = scrollbarVars._w_h;\n              var strWH = scrollbarVars._width_height;\n              var autoSize = horizontal ? widthAuto : heightAuto;\n              var borderSize = horizontal ? _borderX : _borderY;\n              var paddingSize = horizontal ? _paddingX : _paddingY;\n              var marginSize = horizontal ? _marginX : _marginY;\n              var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n              if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n              if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                contentGlueElementCSS[strWH] -= 1;\n              } //make sure content glue size is at least 1\n\n\n              if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n            };\n\n            setContentGlueElementCSSfunction(true);\n            setContentGlueElementCSSfunction(false);\n            if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n            _contentGlueElement.css(contentGlueElementCSS);\n          }\n\n          if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n          if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n          _contentElement.css(contentElementCSS);\n\n          contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n          var contentScrollSize = {\n            w: contentMeasureElement[LEXICON.sW],\n            h: contentMeasureElement[LEXICON.sH]\n          };\n          contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n          _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n          _viewportSize = getViewportSize();\n          hostSize = getHostSize();\n          hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n          _hostSizeCache = hostSize;\n          var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n          var previousOverflowAmount = _overflowAmountCache;\n          var overflowBehaviorIsVS = {};\n          var overflowBehaviorIsVH = {};\n          var overflowBehaviorIsS = {};\n          var overflowAmount = {};\n          var hasOverflow = {};\n          var hideOverflow = {};\n          var canScroll = {};\n\n          var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n          var setOverflowVariables = function setOverflowVariables(horizontal) {\n            var scrollbarVars = getScrollbarVars(horizontal);\n            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n            var xyI = scrollbarVarsInverted._x_y;\n            var xy = scrollbarVars._x_y;\n            var wh = scrollbarVars._w_h;\n            var widthHeight = scrollbarVars._width_height;\n            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n            overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n            hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n            hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n          };\n\n          setOverflowVariables(true);\n          setOverflowVariables(false);\n          overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n          _overflowAmountCache = overflowAmount;\n          hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n          _hasOverflowCache = hasOverflow;\n          hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n          _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n          if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n            var borderDesign = 'px solid transparent';\n            var contentArrangeElementCSS = {};\n            var arrangeContent = {};\n            var arrangeChanged = force;\n            var setContentElementCSS;\n\n            if (hasOverflow.x || hasOverflow.y) {\n              arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n              arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n              arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n              _arrangeContentSizeCache = arrangeContent;\n            }\n\n            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n              contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n              setContentElementCSS = function setContentElementCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n                var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                  contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                } else {\n                  arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                  arrangeChanged = true;\n                }\n              };\n\n              if (_nativeScrollbarStyling) {\n                addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n              } else {\n                setContentElementCSS(true);\n                setContentElementCSS(false);\n              }\n            }\n\n            if (ignoreOverlayScrollbarHiding) {\n              arrangeContent.w = arrangeContent.h = _strEmpty;\n              arrangeChanged = true;\n            }\n\n            if (arrangeChanged && !_nativeScrollbarStyling) {\n              contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n              contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n              if (!_contentArrangeElement) {\n                _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                _viewportElement.prepend(_contentArrangeElement);\n              }\n\n              _contentArrangeElement.css(contentArrangeElementCSS);\n            }\n\n            _contentElement.css(contentElementCSS);\n          }\n\n          var viewportElementCSS = {};\n          var paddingElementCSS = {};\n          var setViewportCSS;\n\n          if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n            viewportElementCSS[isRTLRight] = _strEmpty;\n\n            setViewportCSS = function setViewportCSS(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xy = scrollbarVars._x_y;\n              var XY = scrollbarVars._X_Y;\n              var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n              var reset = function reset() {\n                viewportElementCSS[strDirection] = _strEmpty;\n                _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n              };\n\n              if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                  reset();\n                } else {\n                  viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                }\n              } else {\n                viewportElementCSS[strOverflow + XY] = _strEmpty;\n                reset();\n              }\n            };\n\n            setViewportCSS(true);\n            setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n            // make viewport element greater in size (Firefox hide Scrollbars fix)\n            // because firefox starts hiding scrollbars on too small elements\n            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n            if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n              viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n              viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n              viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n              viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n            } else {\n              viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n            }\n\n            viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n            if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n              //only hide if is Textarea\n              if (_isTextarea && hideOverflowForceTextarea) {\n                paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n              }\n            } else {\n              if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                //only un-hide if Textarea\n                if (_isTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                }\n\n                viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n              }\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _viewportElement.css(viewportElementCSS);\n\n            viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n              var elementStyle = _contentElementNative[LEXICON.s];\n              var dump;\n              elementStyle.webkitTransform = 'scale(1)';\n              elementStyle.display = 'run-in';\n              dump = _contentElementNative[LEXICON.oH];\n              elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n              elementStyle.webkitTransform = _strEmpty;\n            }\n            /*\r\n            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                _hostElement.hide();\r\n                var dump = _hostElementNative[LEXICON.oH];\r\n                _hostElement.show();\r\n            }\r\n            */\n\n          } //change to direction RTL and width auto Bugfix in Webkit\n          //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n          contentElementCSS = {};\n\n          if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n            if (_isRTL && widthAuto) {\n              var floatTmp = _contentElement.css(_strFloat);\n\n              var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n              _contentElement.css(_strFloat, floatTmp);\n\n              var posLeftWithFloat = MATH.round(_contentElement.position().left);\n              if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n            } else {\n              contentElementCSS[_strLeft] = _strEmpty;\n            }\n          }\n\n          _contentElement.css(contentElementCSS); //handle scroll position\n\n\n          if (_isTextarea && contentSizeChanged) {\n            var textareaInfo = getTextareaInfo();\n\n            if (textareaInfo) {\n              var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n              var cursorRow = textareaInfo._cursorRow;\n              var cursorCol = textareaInfo._cursorColumn;\n              var widestRow = textareaInfo._widestRow;\n              var lastRow = textareaInfo._rows;\n              var lastCol = textareaInfo._columns;\n              var cursorPos = textareaInfo._cursorPosition;\n              var cursorMax = textareaInfo._cursorMax;\n              var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n              var textareaScrollAmount = {\n                x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n              };\n              currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n              currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n            }\n\n            _textareaInfoCache = textareaInfo;\n          }\n\n          if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n          if (widthAuto) _hostElement[_strScrollLeft](0);\n          if (heightAuto) _hostElement[_strScrollTop](0);\n\n          _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n          var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n          var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n          var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n          var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n            showY = showY === undefined ? showX : showY;\n            refreshScrollbarAppearance(true, showX, canScroll.x);\n            refreshScrollbarAppearance(false, showY, canScroll.y);\n          }; //manage class name which indicates scrollable overflow\n\n\n          addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n          addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n          addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n          if (cssDirectionChanged && !_isBody) {\n            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n          } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n          if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n          if (resizeChanged) {\n            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n          } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n          if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n            if (ignoreOverlayScrollbarHiding) {\n              if (ignoreOverlayScrollbarHidingChanged) {\n                removeClass(_hostElement, _classNameHostScrolling);\n\n                if (ignoreOverlayScrollbarHiding) {\n                  refreshScrollbarsVisibility(false);\n                }\n              }\n            } else if (scrollbarsVisibilityAuto) {\n              refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n            } else if (scrollbarsVisibilityVisible) {\n              refreshScrollbarsVisibility(true);\n            } else if (scrollbarsVisibilityHidden) {\n              refreshScrollbarsVisibility(false);\n            }\n          } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n          if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n          } //manage scrollbars handle length & offset - don't remove!\n\n\n          if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n            refreshScrollbarHandleLength(true);\n            refreshScrollbarHandleOffset(true);\n            refreshScrollbarHandleLength(false);\n            refreshScrollbarHandleOffset(false);\n          } //manage interactivity\n\n\n          if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n          if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n          dispatchCallback('onDirectionChanged', {\n            isRTL: _isRTL,\n            dir: cssDirection\n          }, cssDirectionChanged);\n          dispatchCallback('onHostSizeChanged', {\n            width: _hostSizeCache.w,\n            height: _hostSizeCache.h\n          }, hostSizeChanged);\n          dispatchCallback('onContentSizeChanged', {\n            width: _contentScrollSizeCache.w,\n            height: _contentScrollSizeCache.h\n          }, contentSizeChanged);\n          dispatchCallback('onOverflowChanged', {\n            x: hasOverflow.x,\n            y: hasOverflow.y,\n            xScrollable: hideOverflow.xs,\n            yScrollable: hideOverflow.ys,\n            clipped: hideOverflow.x || hideOverflow.y\n          }, hasOverflow.c || hideOverflow.c);\n          dispatchCallback('onOverflowAmountChanged', {\n            x: overflowAmount.x,\n            y: overflowAmount.y\n          }, overflowAmount.c);\n        } //fix body min size\n\n\n        if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n          //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n          if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n          if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n          if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n          _bodyMinSizeCache.c = false;\n        }\n\n        if (_initialized && changedOptions.updateOnLoad) {\n          updateElementsOnLoad();\n        } //freezeResizeObserver(_sizeObserverElement, false);\n        //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n        dispatchCallback('onUpdated', {\n          forced: force\n        });\n      }\n      /**\r\n       * Updates the found elements of which the load event shall be handled.\r\n       */\n\n\n      function updateElementsOnLoad() {\n        if (!_isTextarea) {\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n              // if element doesn't have a updateOnLoadCallback applied\n              if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                _updateOnLoadElms.push(el);\n\n                FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n              }\n            });\n          });\n        }\n      } //==== Options ====//\n\n      /**\r\n       * Sets new options but doesn't call the update method.\r\n       * @param newOptions The object which contains the new options.\r\n       * @returns {*} A object which contains the changed options.\r\n       */\n\n\n      function setOptions(newOptions) {\n        var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n        _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n        _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n        return validatedOpts._prepared;\n      } //==== Structure ====//\n\n      /**\r\n       * Builds or destroys the wrapper and helper DOM elements.\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n\n      /**\r\n       * Builds or destroys the wrapper and helper DOM elements.\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n\n\n      function setupStructureDOM(destroy) {\n        var strParent = 'parent';\n        var classNameResizeObserverHost = 'os-resize-observer-host';\n        var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n        var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n        var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n        var adoptAttrsMap = {};\n\n        var applyAdoptedAttrs = function applyAdoptedAttrs() {\n          var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n          each(adoptAttrsMap, function (key, value) {\n            if (type(value) == TYPES.s) {\n              if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n            }\n          });\n        };\n\n        var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n        var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n        _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n        _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n        _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n        _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n        _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n        _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n        if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n        //to prevent adopting generated class names\n\n        if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n        adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n        if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n          each(adoptAttrs, function (i, v) {\n            if (type(v) == TYPES.s) {\n              adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n            }\n          });\n        }\n\n        if (!destroy) {\n          if (_isTextarea) {\n            if (!_currentPreparedOptions.sizeAutoCapable) {\n              hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n              hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n            }\n\n            if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n            _hostElement = _targetElement[strParent]().css(hostElementCSS);\n          }\n\n          if (!_domExists) {\n            //add the correct class to the target element\n            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n            _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n            if (_isTextarea) {\n              _contentElement.prepend(_textareaCoverElement);\n\n              applyAdoptedAttrs();\n            }\n          }\n\n          if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n          if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n          _sizeObserverElementNative = _sizeObserverElement[0];\n          _hostElementNative = _hostElement[0];\n          _paddingElementNative = _paddingElement[0];\n          _viewportElementNative = _viewportElement[0];\n          _contentElementNative = _contentElement[0];\n          updateViewportAttrsFromTarget();\n        } else {\n          if (_domExists && _initialized) {\n            //clear size observer\n            _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n              if (elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              }\n            }); //add classes to the host element which was removed previously to match the expected DOM\n\n            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n          } else {\n            //remove size observer\n            remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n            _contentElement.contents().unwrap().unwrap().unwrap();\n\n            if (_isTextarea) {\n              _targetElement.unwrap();\n\n              remove(_hostElement);\n              remove(_textareaCoverElement);\n              applyAdoptedAttrs();\n            }\n          }\n\n          if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n          if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n        }\n      }\n      /**\r\n       * Adds or removes all wrapper elements interactivity events.\r\n       * @param destroy Indicates whether the Events shall be added or removed.\r\n       */\n\n\n      function setupStructureEvents() {\n        var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n        33, 34, //page up, page down\n        37, 38, 39, 40, //left, up, right, down arrows\n        16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n        ];\n        var textareaKeyDownKeyCodesList = [];\n        var textareaUpdateIntervalID;\n        var scrollStopTimeoutId;\n        var scrollStopDelay = 175;\n        var strFocus = 'focus';\n\n        function updateTextarea(doClearInterval) {\n          textareaUpdate();\n\n          _base.update(_strAuto);\n\n          if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n        }\n\n        function textareaOnScroll(event) {\n          _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n          _targetElement[_strScrollTop](0);\n\n          COMPATIBILITY.prvD(event);\n          COMPATIBILITY.stpP(event);\n          return false;\n        }\n\n        function textareaOnDrop(event) {\n          setTimeout(function () {\n            if (!_destroyed) updateTextarea();\n          }, 50);\n        }\n\n        function textareaOnFocus() {\n          _textareaHasFocus = true;\n          addClass(_hostElement, strFocus);\n        }\n\n        function textareaOnFocusout() {\n          _textareaHasFocus = false;\n          textareaKeyDownKeyCodesList = [];\n          removeClass(_hostElement, strFocus);\n          updateTextarea(true);\n        }\n\n        function textareaOnKeyDown(event) {\n          var keyCode = event.keyCode;\n\n          if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n              updateTextarea();\n              textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n            }\n\n            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n          }\n        }\n\n        function textareaOnKeyUp(event) {\n          var keyCode = event.keyCode;\n          var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n          if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n            if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n            if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n          }\n        }\n\n        function contentOnTransitionEnd(event) {\n          if (_autoUpdateCache === true) return;\n          event = event.originalEvent || event;\n          if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n        }\n\n        function viewportOnScroll(event) {\n          if (!_sleeping) {\n            if (scrollStopTimeoutId !== undefined) clearTimeout(scrollStopTimeoutId);else {\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n              if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n              dispatchCallback('onScrollStart', event);\n            } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n            if (!_scrollbarsHandlesDefineScrollPos) {\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleOffset(false);\n            }\n\n            dispatchCallback('onScroll', event);\n            scrollStopTimeoutId = setTimeout(function () {\n              if (!_destroyed) {\n                //OnScrollStop:\n                clearTimeout(scrollStopTimeoutId);\n                scrollStopTimeoutId = undefined;\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStop', event);\n              }\n            }, scrollStopDelay);\n          }\n        }\n\n        if (_isTextarea) {\n          if (_msieVersion > 9 || !_autoUpdateRecommended) {\n            addDestroyEventListener(_targetElement, 'input', updateTextarea);\n          } else {\n            addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n          }\n\n          addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n        } else {\n          addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n        }\n\n        addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n      } //==== Scrollbars ====//\n\n      /**\r\n       * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n\n\n      function setupScrollbarsDOM(destroy) {\n        var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n          var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n          var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n          var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n          var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n          if (!_domExists && !destroy) {\n            scrollbar.append(track);\n            track.append(handle);\n          }\n\n          return {\n            _scrollbar: scrollbar,\n            _track: track,\n            _handle: handle\n          };\n        };\n\n        function resetScrollbarDOM(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbar = scrollbarVars._scrollbar;\n          var track = scrollbarVars._track;\n          var handle = scrollbarVars._handle;\n\n          if (_domExists && _initialized) {\n            each([scrollbar, track, handle], function (i, elm) {\n              removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            });\n          } else {\n            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n          }\n        }\n\n        var horizontalElements;\n        var verticalElements;\n\n        if (!destroy) {\n          horizontalElements = selectOrGenerateScrollbarDOM(true);\n          verticalElements = selectOrGenerateScrollbarDOM();\n          _scrollbarHorizontalElement = horizontalElements._scrollbar;\n          _scrollbarHorizontalTrackElement = horizontalElements._track;\n          _scrollbarHorizontalHandleElement = horizontalElements._handle;\n          _scrollbarVerticalElement = verticalElements._scrollbar;\n          _scrollbarVerticalTrackElement = verticalElements._track;\n          _scrollbarVerticalHandleElement = verticalElements._handle;\n\n          if (!_domExists) {\n            _paddingElement.after(_scrollbarVerticalElement);\n\n            _paddingElement.after(_scrollbarHorizontalElement);\n          }\n        } else {\n          resetScrollbarDOM(true);\n          resetScrollbarDOM();\n        }\n      }\n      /**\r\n       * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n       * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n       */\n\n\n      function setupScrollbarEvents(isHorizontal) {\n        var scrollbarVars = getScrollbarVars(isHorizontal);\n        var scrollbarVarsInfo = scrollbarVars._info;\n        var insideIFrame = _windowElementNative.top !== _windowElementNative;\n        var xy = scrollbarVars._x_y;\n        var XY = scrollbarVars._X_Y;\n        var scroll = _strScroll + scrollbarVars._Left_Top;\n        var strActive = 'active';\n        var strSnapHandle = 'snapHandle';\n        var strClickEvent = 'click';\n        var scrollDurationFactor = 1;\n        var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n        var trackTimeout;\n        var mouseDownScroll;\n        var mouseDownOffset;\n        var mouseDownInvertedScale;\n\n        function getPointerPosition(event) {\n          return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n        }\n\n        function getPreparedScrollbarsOption(name) {\n          return _currentPreparedOptions.scrollbars[name];\n        }\n\n        function increaseTrackScrollAmount() {\n          scrollDurationFactor = 0.5;\n        }\n\n        function decreaseTrackScrollAmount() {\n          scrollDurationFactor = 1;\n        }\n\n        function stopClickEventPropagation(event) {\n          COMPATIBILITY.stpP(event);\n        }\n\n        function documentKeyDown(event) {\n          if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n        }\n\n        function documentKeyUp(event) {\n          if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n        }\n\n        function onMouseTouchDownContinue(event) {\n          var originalEvent = event.originalEvent || event;\n          var isTouchEvent = originalEvent.touches !== undefined;\n          return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n        }\n\n        function documentDragMove(event) {\n          if (onMouseTouchDownContinue(event)) {\n            var trackLength = scrollbarVarsInfo._trackLength;\n            var handleLength = scrollbarVarsInfo._handleLength;\n            var scrollRange = scrollbarVarsInfo._maxScroll;\n            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n            var scrollDelta = scrollRange * scrollDeltaPercent;\n            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n            if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n          } else documentMouseTouchUp(event);\n        }\n\n        function documentMouseTouchUp(event) {\n          event = event || event.originalEvent;\n          setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n          COMPATIBILITY.rAF()(function () {\n            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n              _capture: true\n            });\n          });\n          if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n          _scrollbarsHandlesDefineScrollPos = false;\n          removeClass(_bodyElement, _classNameDragging);\n          removeClass(scrollbarVars._handle, strActive);\n          removeClass(scrollbarVars._track, strActive);\n          removeClass(scrollbarVars._scrollbar, strActive);\n          mouseDownScroll = undefined;\n          mouseDownOffset = undefined;\n          mouseDownInvertedScale = 1;\n          decreaseTrackScrollAmount();\n\n          if (trackTimeout !== undefined) {\n            _base.scrollStop();\n\n            clearTimeout(trackTimeout);\n            trackTimeout = undefined;\n          }\n\n          if (event) {\n            var rect = _hostElementNative[LEXICON.bCR]();\n\n            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n            if (!mouseInsideHost) hostOnMouseLeave();\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n        }\n\n        function onHandleMouseTouchDown(event) {\n          if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n        }\n\n        function onHandleMouseTouchDownAction(event) {\n          mouseDownScroll = _viewportElement[scroll]();\n          mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n          if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n          mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n          mouseDownOffset = getPointerPosition(event);\n          _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n          addClass(_bodyElement, _classNameDragging);\n          addClass(scrollbarVars._handle, strActive);\n          addClass(scrollbarVars._scrollbar, strActive);\n          setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n          COMPATIBILITY.rAF()(function () {\n            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n              _capture: true\n            });\n          });\n          if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n          COMPATIBILITY.stpP(event);\n        }\n\n        function onTrackMouseTouchDown(event) {\n          if (onMouseTouchDownContinue(event)) {\n            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n            var scrollBaseDuration = 270 * handleToViewportRatio;\n            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n            var ctrlKey = event.ctrlKey;\n            var instantScroll = event.shiftKey;\n            var instantScrollTransition = instantScroll && ctrlKey;\n            var isFirstIteration = true;\n            var easing = 'linear';\n            var decreaseScroll;\n            var finishedCondition;\n\n            var scrollActionFinsished = function scrollActionFinsished(transition) {\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n            };\n\n            var scrollActionInstantFinished = function scrollActionInstantFinished() {\n              scrollActionFinsished();\n              onHandleMouseTouchDownAction(event);\n            };\n\n            var scrollAction = function scrollAction() {\n              if (!_destroyed) {\n                var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                var handleOffset = scrollbarVarsInfo._handleOffset;\n                var trackLength = scrollbarVarsInfo._trackLength;\n                var handleLength = scrollbarVarsInfo._handleLength;\n                var scrollRange = scrollbarVarsInfo._maxScroll;\n                var currScroll = scrollbarVarsInfo._currentScroll;\n                var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                var scrollObj = {};\n                var animationObj = {\n                  easing: easing,\n                  step: function step(now) {\n                    if (_scrollbarsHandlesDefineScrollPos) {\n                      _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                      refreshScrollbarHandleOffset(isHorizontal, now);\n                    }\n                  }\n                };\n                instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                if (instantScroll) {\n                  _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                  if (instantScrollTransition) {\n                    //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                    //and the animation stops at the correct point\n                    instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                    _viewportElement[scroll](currScroll);\n\n                    instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                    instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                    scrollObj[xy] = instantScrollPosition;\n\n                    _base.scroll(scrollObj, extendDeep(animationObj, {\n                      duration: 130,\n                      complete: scrollActionInstantFinished\n                    }));\n                  } else scrollActionInstantFinished();\n                } else {\n                  decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                  finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                  if (finishedCondition) {\n                    clearTimeout(trackTimeout);\n\n                    _base.scrollStop();\n\n                    trackTimeout = undefined;\n                    scrollActionFinsished(true);\n                  } else {\n                    trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                    scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                    _base.scroll(scrollObj, extendDeep(animationObj, {\n                      duration: scrollDuration\n                    }));\n                  }\n\n                  isFirstIteration = false;\n                }\n              }\n            };\n\n            if (ctrlKey) increaseTrackScrollAmount();\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = COMPATIBILITY.page(event)[xy];\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._track, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n            scrollAction();\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n        }\n\n        function onTrackMouseTouchEnter(event) {\n          //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n          _scrollbarsHandleHovered = true;\n          if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n        }\n\n        function onTrackMouseTouchLeave(event) {\n          _scrollbarsHandleHovered = false;\n          if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n        }\n\n        function onScrollbarMouseTouchDown(event) {\n          COMPATIBILITY.stpP(event);\n        }\n\n        addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n        addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n        addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n        if (_supportTransition) {\n          addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n            if (event.target !== scrollbarVars._scrollbar[0]) return;\n            refreshScrollbarHandleLength(isHorizontal);\n            refreshScrollbarHandleOffset(isHorizontal);\n          });\n        }\n      }\n      /**\r\n       * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n       * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n       * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n       * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n       */\n\n\n      function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n        var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n        var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n        addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n        addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n      }\n      /**\r\n       * Autoshows / autohides both scrollbars with.\r\n       * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n       * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n       */\n\n\n      function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n        clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n        if (shallBeVisible) {\n          //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n          removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n          removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n        } else {\n          var anyActive;\n          var strActive = 'active';\n\n          var hide = function hide() {\n            if (!_scrollbarsHandleHovered && !_destroyed) {\n              anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n              if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n              if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n            }\n          };\n\n          if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n        }\n      }\n      /**\r\n       * Refreshes the handle length of the given scrollbar.\r\n       * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n       */\n\n\n      function refreshScrollbarHandleLength(isHorizontal) {\n        var handleCSS = {};\n        var scrollbarVars = getScrollbarVars(isHorizontal);\n        var scrollbarVarsInfo = scrollbarVars._info;\n        var digit = 1000000; //get and apply intended handle length\n\n        var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n        handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n        if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n        scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n        scrollbarVarsInfo._handleLengthRatio = handleRatio;\n      }\n      /**\r\n       * Refreshes the handle offset of the given scrollbar.\r\n       * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n       * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n       */\n\n\n      function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n        var transition = type(scrollOrTransition) == TYPES.b;\n        var transitionDuration = 250;\n        var isRTLisHorizontal = _isRTL && isHorizontal;\n        var scrollbarVars = getScrollbarVars(isHorizontal);\n        var scrollbarVarsInfo = scrollbarVars._info;\n        var strTranslateBrace = 'translate(';\n\n        var strTransform = VENDORS._cssProperty('transform');\n\n        var strTransition = VENDORS._cssProperty('transition');\n\n        var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n        var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n        var handleLength = scrollbarVarsInfo._handleLength;\n        var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n        var handleTrackDiff = trackLength - handleLength;\n        var handleCSS = {};\n        var transformOffset;\n        var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n        // because its a bit behind during the small delay when content size updates\n        //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n        var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n        var getScrollRatio = function getScrollRatio(base) {\n          return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n        };\n\n        var getHandleOffset = function getHandleOffset(scrollRatio) {\n          var offset = handleTrackDiff * scrollRatio;\n          offset = isNaN(offset) ? 0 : offset;\n          offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n          offset = MATH.max(0, offset);\n          return offset;\n        };\n\n        var scrollRatio = getScrollRatio(nativeScroll);\n        var unsnappedScrollRatio = getScrollRatio(currentScroll);\n        var handleOffset = getHandleOffset(unsnappedScrollRatio);\n        var snappedHandleOffset = getHandleOffset(scrollRatio);\n        scrollbarVarsInfo._maxScroll = maxScroll;\n        scrollbarVarsInfo._currentScroll = nativeScroll;\n        scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n        if (_supportTransform) {\n          transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n          //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n          translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n          handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n          if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n        } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n        if (!nativeOverlayScrollbarsAreActive()) {\n          scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n          if (_supportTransform && _supportTransition && transition) {\n            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n              if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n            });\n          }\n        }\n\n        scrollbarVarsInfo._handleOffset = handleOffset;\n        scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n        scrollbarVarsInfo._trackLength = trackLength;\n      }\n      /**\r\n       * Refreshes the interactivity of the given scrollbar element.\r\n       * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n       * @param value True for interactivity false for no interactivity.\r\n       */\n\n\n      function refreshScrollbarsInteractive(isTrack, value) {\n        var action = value ? 'removeClass' : 'addClass';\n        var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n        var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n        var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n        element1[action](className);\n        element2[action](className);\n      }\n      /**\r\n       * Returns a object which is used for fast access for specific variables.\r\n       * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n       * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n       */\n\n\n      function getScrollbarVars(isHorizontal) {\n        return {\n          _width_height: isHorizontal ? _strWidth : _strHeight,\n          _Width_Height: isHorizontal ? 'Width' : 'Height',\n          _left_top: isHorizontal ? _strLeft : _strTop,\n          _Left_Top: isHorizontal ? 'Left' : 'Top',\n          _x_y: isHorizontal ? _strX : _strY,\n          _X_Y: isHorizontal ? 'X' : 'Y',\n          _w_h: isHorizontal ? 'w' : 'h',\n          _l_t: isHorizontal ? 'l' : 't',\n          _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n          _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n          _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n          _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n        };\n      } //==== Scrollbar Corner ====//\n\n      /**\r\n       * Builds or destroys the scrollbar corner DOM element.\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n\n\n      function setupScrollbarCornerDOM(destroy) {\n        _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n        if (!destroy) {\n          if (!_domExists) {\n            _hostElement.append(_scrollbarCornerElement);\n          }\n        } else {\n          if (_domExists && _initialized) {\n            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n          } else {\n            remove(_scrollbarCornerElement);\n          }\n        }\n      }\n      /**\r\n       * Initializes all scrollbar corner interactivity events.\r\n       */\n\n\n      function setupScrollbarCornerEvents() {\n        var insideIFrame = _windowElementNative.top !== _windowElementNative;\n        var mouseDownPosition = {};\n        var mouseDownSize = {};\n        var mouseDownInvertedScale = {};\n        var reconnectMutationObserver;\n\n        function documentDragMove(event) {\n          if (onMouseTouchDownContinue(event)) {\n            var pageOffset = getCoordinates(event);\n            var hostElementCSS = {};\n            if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n            if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n            _hostElement.css(hostElementCSS);\n\n            COMPATIBILITY.stpP(event);\n          } else {\n            documentMouseTouchUp(event);\n          }\n        }\n\n        function documentMouseTouchUp(event) {\n          var eventIsTrusted = event !== undefined;\n          setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n          removeClass(_bodyElement, _classNameDragging);\n          if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n          if (eventIsTrusted) {\n            if (reconnectMutationObserver) connectMutationObservers();\n\n            _base.update(_strAuto);\n          }\n\n          reconnectMutationObserver = false;\n        }\n\n        function onMouseTouchDownContinue(event) {\n          var originalEvent = event.originalEvent || event;\n          var isTouchEvent = originalEvent.touches !== undefined;\n          return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n        }\n\n        function getCoordinates(event) {\n          return _msieVersion && insideIFrame ? {\n            x: event.screenX,\n            y: event.screenY\n          } : COMPATIBILITY.page(event);\n        }\n\n        addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n          if (onMouseTouchDownContinue(event) && !_resizeNone) {\n            if (_mutationObserversConnected) {\n              reconnectMutationObserver = true;\n              disconnectMutationObservers();\n            }\n\n            mouseDownPosition = getCoordinates(event);\n            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n            mouseDownInvertedScale = getHostElementInvertedScale();\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n            addClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n        });\n      } //==== Utils ====//\n\n      /**\r\n       * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n       * @param name The name of the target which shall be called.\r\n       * @param args The args with which the callback shall be called.\r\n       * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n       */\n\n\n      function dispatchCallback(name, args, dependent) {\n        if (dependent === false) return;\n\n        if (_initialized) {\n          var callback = _currentPreparedOptions.callbacks[name];\n          var extensionOnName = name;\n          var ext;\n          if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n          if (type(callback) == TYPES.f) callback.call(_base, args);\n          each(_extensions, function () {\n            ext = this;\n            if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n          });\n        } else if (!_destroyed) _callbacksInitQeueue.push({\n          n: name,\n          a: args\n        });\n      }\n      /**\r\n       * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n       * @param targetCSSObject The css object to which the values shall be applied.\r\n       * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n       * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n       * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n       */\n\n\n      function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n        prefix = prefix || _strEmpty;\n        values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n        targetCSSObject[prefix + _strTop] = values[0];\n        targetCSSObject[prefix + _strRight] = values[1];\n        targetCSSObject[prefix + _strBottom] = values[2];\n        targetCSSObject[prefix + _strLeft] = values[3];\n      }\n      /**\r\n       * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n       * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n       * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n       * @param zeroX True if the x axis shall be 0.\r\n       * @param zeroY True if the y axis shall be 0.\r\n       * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n       */\n\n\n      function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n        suffix = suffix || _strEmpty;\n        prefix = prefix || _strEmpty;\n        return {\n          t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n          r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n          b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n          l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n        };\n      }\n      /**\r\n       * Returns the computed CSS transition string from the given element.\r\n       * @param element The element from which the transition string shall be returned.\r\n       * @returns {string} The CSS transition string from the given element.\r\n       */\n\n\n      function getCSSTransitionString(element) {\n        var transitionStr = VENDORS._cssProperty('transition');\n\n        var assembledValue = element.css(transitionStr);\n        if (assembledValue) return assembledValue;\n        var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n        var regExpMain = new RegExp(regExpString);\n        var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n        var properties = 'property duration timing-function delay'.split(' ');\n        var result = [];\n        var strResult;\n        var valueArray;\n        var i = 0;\n        var j;\n\n        var splitCssStyleByComma = function splitCssStyleByComma(str) {\n          strResult = [];\n          if (!str.match(regExpValidate)) return str;\n\n          while (str.match(regExpMain)) {\n            strResult.push(RegExp.$1);\n            str = str.replace(regExpMain, _strEmpty);\n          }\n\n          return strResult;\n        };\n\n        for (; i < properties[LEXICON.l]; i++) {\n          valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n          for (j = 0; j < valueArray[LEXICON.l]; j++) {\n            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n          }\n        }\n\n        return result.join(', ');\n      }\n      /**\r\n       * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n       * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n       * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n       */\n\n\n      function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n        var i;\n        var split;\n        var appendix;\n\n        var appendClasses = function appendClasses(classes, condition) {\n          appendix = '';\n\n          if (condition && typeof classes == TYPES.s) {\n            split = classes.split(_strSpace);\n\n            for (i = 0; i < split[LEXICON.l]; i++) {\n              appendix += '|' + split[i] + '$';\n            } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n          }\n\n          return appendix;\n        };\n\n        return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n      }\n      /**\r\n       * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n       * @returns {{x: number, y: number}} The scale of the host-element.\r\n       */\n\n\n      function getHostElementInvertedScale() {\n        var rect = _paddingElementNative[LEXICON.bCR]();\n\n        return {\n          x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n          y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n        };\n      }\n      /**\r\n       * Checks whether the given object is a HTMLElement.\r\n       * @param o The object which shall be checked.\r\n       * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n       */\n\n\n      function isHTMLElement(o) {\n        var strOwnerDocument = 'ownerDocument';\n        var strHTMLElement = 'HTMLElement';\n        var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n        return typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n        o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s;\n      }\n      /**\r\n       * Compares 2 arrays and returns the differences between them as a array.\r\n       * @param a1 The first array which shall be compared.\r\n       * @param a2 The second array which shall be compared.\r\n       * @returns {Array} The differences between the two arrays.\r\n       */\n\n\n      function getArrayDifferences(a1, a2) {\n        var a = [];\n        var diff = [];\n        var i;\n        var k;\n\n        for (i = 0; i < a1.length; i++) {\n          a[a1[i]] = true;\n        }\n\n        for (i = 0; i < a2.length; i++) {\n          if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n        }\n\n        for (k in a) {\n          diff.push(k);\n        }\n\n        return diff;\n      }\n      /**\r\n       * Returns Zero or the number to which the value can be parsed.\r\n       * @param value The value which shall be parsed.\r\n       * @param toFloat Indicates whether the number shall be parsed to a float.\r\n       */\n\n\n      function parseToZeroOrNumber(value, toFloat) {\n        var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n        return isNaN(num) ? 0 : num;\n      }\n      /**\r\n       * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n       * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n       */\n\n\n      function getTextareaInfo() {\n        //read needed values\n        var textareaCursorPosition = _targetElementNative.selectionStart;\n        if (textareaCursorPosition === undefined) return;\n\n        var textareaValue = _targetElement.val();\n\n        var textareaLength = textareaValue[LEXICON.l];\n        var textareaRowSplit = textareaValue.split('\\n');\n        var textareaLastRow = textareaRowSplit[LEXICON.l];\n        var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n        var widestRow = 0;\n        var textareaLastCol = 0;\n        var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n        var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n        var rowCols;\n        var i; //get widest Row and the last column of the textarea\n\n        for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n          rowCols = textareaRowSplit[i][LEXICON.l];\n\n          if (rowCols > textareaLastCol) {\n            widestRow = i + 1;\n            textareaLastCol = rowCols;\n          }\n        }\n\n        return {\n          _cursorRow: cursorRow,\n          //cursorRow\n          _cursorColumn: cursorCol,\n          //cursorCol\n          _rows: textareaLastRow,\n          //rows\n          _columns: textareaLastCol,\n          //cols\n          _widestRow: widestRow,\n          //wRow\n          _cursorPosition: textareaCursorPosition,\n          //pos\n          _cursorMax: textareaLength //max\n\n        };\n      }\n      /**\r\n       * Determines whether native overlay scrollbars are active.\r\n       * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n       */\n\n\n      function nativeOverlayScrollbarsAreActive() {\n        return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n      }\n      /**\r\n       * Gets the element which is used to measure the content size.\r\n       * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n       */\n\n\n      function getContentMeasureElement() {\n        return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n      }\n      /**\r\n       * Generates a string which represents a HTML div with the given classes or attributes.\r\n       * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n       * @param content The content of the div as string.\r\n       * @returns {string} The concated string which represents a HTML div and its content.\r\n       */\n\n\n      function generateDiv(classesOrAttrs, content) {\n        return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n          var key;\n          var attrs = _strEmpty;\n\n          if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n            for (key in classesOrAttrs) {\n              attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n            }\n          }\n\n          return attrs;\n        }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n      }\n      /**\r\n       * Selects or generates a div with the given class attribute.\r\n       * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n       * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n       * If its a boolean it decides whether only the children of the host element shall be selected.\r\n       * @returns {*} The generated or selected element.\r\n       */\n\n\n      function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n        var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n        var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n        return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n      }\n      /**\r\n       * Gets the value of the given property from the given object.\r\n       * @param obj The object from which the property value shall be got.\r\n       * @param path The property of which the value shall be got.\r\n       * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n       */\n\n\n      function getObjectPropVal(obj, path) {\n        var splits = path.split(_strDot);\n        var i = 0;\n        var val;\n\n        for (; i < splits.length; i++) {\n          if (!obj[LEXICON.hOP](splits[i])) return;\n          val = obj[splits[i]];\n          if (i < splits.length && type(val) == TYPES.o) obj = val;\n        }\n\n        return val;\n      }\n      /**\r\n       * Sets the value of the given property from the given object.\r\n       * @param obj The object from which the property value shall be set.\r\n       * @param path The property of which the value shall be set.\r\n       * @param val The value of the property which shall be set.\r\n       */\n\n\n      function setObjectPropVal(obj, path, val) {\n        var splits = path.split(_strDot);\n        var splitsLength = splits.length;\n        var i = 0;\n        var extendObj = {};\n        var extendObjRoot = extendObj;\n\n        for (; i < splitsLength; i++) {\n          extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n        }\n\n        FRAMEWORK.extend(obj, extendObjRoot, true);\n      }\n      /**\t\r\n       * Runs a action for each selector inside the updateOnLoad option.\t\r\n       * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n       */\n\n\n      function eachUpdateOnLoad(action) {\n        var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n        updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n        if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n          each(updateOnLoad, action);\n        }\n      } //==== Utils Cache ====//\n\n      /**\r\n       * Compares two values or objects and returns true if they aren't equal.\r\n       * @param current The first value or object which shall be compared.\r\n       * @param cache The second value or object which shall be compared.\r\n       * @param force If true the returned value is always true.\r\n       * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n       */\n\n\n      function checkCache(current, cache, force) {\n        if (force) return force;\n\n        if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n          for (var prop in current) {\n            if (prop !== 'c') {\n              if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                if (checkCache(current[prop], cache[prop])) return true;\n              } else {\n                return true;\n              }\n            }\n          }\n        } else {\n          return current !== cache;\n        }\n\n        return false;\n      } //==== Shortcuts ====//\n\n      /**\r\n       * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n       */\n\n\n      function extendDeep() {\n        return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n      }\n      /**\r\n       * jQuery addClass method shortcut.\r\n       */\n\n\n      function addClass(el, classes) {\n        return _frameworkProto.addClass.call(el, classes);\n      }\n      /**\r\n       * jQuery removeClass method shortcut.\r\n       */\n\n\n      function removeClass(el, classes) {\n        return _frameworkProto.removeClass.call(el, classes);\n      }\n      /**\r\n       * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n       */\n\n\n      function addRemoveClass(el, classes, doAdd) {\n        return doAdd ? addClass(el, classes) : removeClass(el, classes);\n      }\n      /**\r\n       * jQuery remove method shortcut.\r\n       */\n\n\n      function remove(el) {\n        return _frameworkProto.remove.call(el);\n      }\n      /**\r\n       * Finds the first child element with the given selector of the given element.\r\n       * @param el The root element from which the selector shall be valid.\r\n       * @param selector The selector of the searched element.\r\n       * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n       */\n\n\n      function findFirst(el, selector) {\n        return _frameworkProto.find.call(el, selector).eq(0);\n      } //==== API ====//\n\n      /**\r\n       * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n       * This behavior can be reset by calling the update method.\r\n       */\n\n\n      _base.sleep = function () {\n        _sleeping = true;\n      };\n      /**\r\n       * Updates the plugin and DOM to the current options.\r\n       * This method should only be called if a update is 100% required.\r\n       * @param force True if every property shall be updated and the cache shall be ignored.\r\n       * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n       * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n       * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n       * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n       * @returns {boolean|undefined} \r\n       * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n       * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n       * undefined otherwise.\r\n       */\n\n\n      _base.update = function (force) {\n        if (_destroyed) return;\n        var attrsChanged;\n        var contentSizeC;\n        var isString = type(force) == TYPES.s;\n        var doUpdateAuto;\n        var mutHost;\n        var mutContent;\n\n        if (isString) {\n          if (force === _strAuto) {\n            attrsChanged = meaningfulAttrsChanged();\n            contentSizeC = updateAutoContentSizeChanged();\n            doUpdateAuto = attrsChanged || contentSizeC;\n\n            if (doUpdateAuto) {\n              update({\n                _contentSizeChanged: contentSizeC,\n                _changedOptions: _initialized ? undefined : _currentPreparedOptions\n              });\n            }\n          } else if (force === _strSync) {\n            if (_mutationObserversConnected) {\n              mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n              mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n            } else {\n              mutHost = _base.update(_strAuto);\n            }\n          } else if (force === 'zoom') {\n            update({\n              _hostSizeChanged: true,\n              _contentSizeChanged: true\n            });\n          }\n        } else {\n          force = _sleeping || force;\n          _sleeping = false;\n          if (!_base.update(_strSync) || force) update({\n            _force: force\n          });\n        }\n\n        updateElementsOnLoad();\n        return doUpdateAuto || mutHost || mutContent;\n      };\n      /**\r\n       Gets or sets the current options. The update method will be called automatically if new options were set.\r\n       * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n       * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n       * @returns {*}\r\n       */\n\n\n      _base.options = function (newOptions, value) {\n        var option = {};\n        var changedOps; //return current options if newOptions are undefined or empty\n\n        if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n          if (type(newOptions) == TYPES.s) {\n            if (arguments.length > 1) {\n              setObjectPropVal(option, newOptions, value);\n              changedOps = setOptions(option);\n            } else return getObjectPropVal(_currentOptions, newOptions);\n          } else return _currentOptions;\n        } else {\n          changedOps = setOptions(newOptions);\n        }\n\n        if (!FRAMEWORK.isEmptyObject(changedOps)) {\n          update({\n            _changedOptions: changedOps\n          });\n        }\n      };\n      /**\r\n       * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n       */\n\n\n      _base.destroy = function () {\n        if (_destroyed) return; //remove this instance from auto update loop\n\n        autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n        disconnectMutationObservers(); //remove all resize observers\n\n        setupResizeObserver(_sizeObserverElement);\n        setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n        for (var extName in _extensions) {\n          _base.removeExt(extName);\n        } //remove all 'destroy' events\n\n\n        while (_destroyEvents[LEXICON.l] > 0) {\n          _destroyEvents.pop()();\n        } //remove all events from host element\n\n\n        setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n        if (_contentGlueElement) remove(_contentGlueElement);\n        if (_contentArrangeElement) remove(_contentArrangeElement);\n        if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n        setupScrollbarsDOM(true);\n        setupScrollbarCornerDOM(true);\n        setupStructureDOM(true); //remove all generated image load events\n\n        for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n          FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n        }\n\n        _updateOnLoadElms = undefined;\n        _destroyed = true;\n        _sleeping = true; //remove this instance from the instances list\n\n        INSTANCES(pluginTargetElement, 0);\n        dispatchCallback('onDestroyed'); //remove all properties and methods\n        //for (var property in _base)\n        //    delete _base[property];\n        //_base = undefined;\n      };\n      /**\r\n       * Scrolls to a given position or element.\r\n       * @param coordinates\r\n       * 1. Can be \"coordinates\" which looks like:\r\n       *    { x : ?, y : ? } OR          Object with x and y properties\r\n       *    { left : ?, top : ? } OR     Object with left and top properties\r\n       *    { l : ?, t : ? } OR          Object with l and t properties\r\n       *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n       *    ?                            A single value which stays for both axis\r\n       *    A value can be a number, a string or a calculation.\r\n       *\r\n       *    Operators:\r\n       *    [NONE]  The current scroll will be overwritten by the value.\r\n       *    '+='    The value will be added to the current scroll offset\r\n       *    '-='    The value will be subtracted from the current scroll offset\r\n       *    '*='    The current scroll wil be multiplicated by the value.\r\n       *    '/='    The current scroll wil be divided by the value.\r\n       *\r\n       *    Units:\r\n       *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n       *    'px'    Same as none\r\n       *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n       *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n       *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n       *\r\n       *    example final values:\r\n       *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n       *\r\n       * 2. Can be a HTML or jQuery element:\r\n       *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n       *\r\n       * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n       *    {\r\n       *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n       *      scroll : [string, array, object],               Default value is 'always'.\r\n       *      block : [string, array, object],                Default value is 'begin'.\r\n       *      margin : [number, boolean, array, object]       Default value is false.\r\n       *    }\r\n       *\r\n       *    Possible scroll settings are:\r\n       *    'always'      Scrolls always.\r\n       *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n       *    'never'       Scrolls never.\r\n       *\r\n       *    Possible block settings are:\r\n       *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n       *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n       *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n       *    'nearest' The element will be docked to the nearest edge(s).\r\n       *\r\n       *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n       *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n       *    [NUMBER]                                          The margin will be used for all edges.\r\n       *\r\n       * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n       * @param easing The animation easing.\r\n       * @param complete The animation complete callback.\r\n       * @returns {{\r\n       *   position: {x: number, y: number},\r\n       *   ratio: {x: number, y: number},\r\n       *   max: {x: number, y: number},\r\n       *   handleOffset: {x: number, y: number},\r\n       *   handleLength: {x: number, y: number},\r\n       *   handleLengthRatio: {x: number, y: number}, t\r\n       *   rackLength: {x: number, y: number},\r\n       *   isRTL: boolean,\r\n       *   isRTLNormalized: boolean\r\n       *  }}\r\n       */\n\n\n      _base.scroll = function (coordinates, duration, easing, complete) {\n        if (arguments.length === 0 || coordinates === undefined) {\n          var infoX = _scrollHorizontalInfo;\n          var infoY = _scrollVerticalInfo;\n          var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n          var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n          var scrollX = infoX._currentScroll;\n          var scrollXRatio = infoX._currentScrollRatio;\n          var maxScrollX = infoX._maxScroll;\n          scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n          scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n          scrollX *= normalizeNegate ? -1 : 1;\n          maxScrollX *= normalizeNegate ? -1 : 1;\n          return {\n            position: {\n              x: scrollX,\n              y: infoY._currentScroll\n            },\n            ratio: {\n              x: scrollXRatio,\n              y: infoY._currentScrollRatio\n            },\n            max: {\n              x: maxScrollX,\n              y: infoY._maxScroll\n            },\n            handleOffset: {\n              x: infoX._handleOffset,\n              y: infoY._handleOffset\n            },\n            handleLength: {\n              x: infoX._handleLength,\n              y: infoY._handleLength\n            },\n            handleLengthRatio: {\n              x: infoX._handleLengthRatio,\n              y: infoY._handleLengthRatio\n            },\n            trackLength: {\n              x: infoX._trackLength,\n              y: infoY._trackLength\n            },\n            snappedHandleOffset: {\n              x: infoX._snappedHandleOffset,\n              y: infoY._snappedHandleOffset\n            },\n            isRTL: _isRTL,\n            isRTLNormalized: _normalizeRTLCache\n          };\n        }\n\n        _base.update(_strSync);\n\n        var normalizeRTL = _normalizeRTLCache;\n        var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n        var coordinatesYAxisProps = [_strY, _strTop, 't'];\n        var coordinatesOperators = ['+=', '-=', '*=', '/='];\n        var durationIsObject = type(duration) == TYPES.o;\n        var completeCallback = durationIsObject ? duration.complete : complete;\n        var i;\n        var finalScroll = {};\n        var specialEasing = {};\n        var doScrollLeft;\n        var doScrollTop;\n        var animationOptions;\n        var strEnd = 'end';\n        var strBegin = 'begin';\n        var strCenter = 'center';\n        var strNearest = 'nearest';\n        var strAlways = 'always';\n        var strNever = 'never';\n        var strIfNeeded = 'ifneeded';\n        var strLength = LEXICON.l;\n        var settingsAxis;\n        var settingsScroll;\n        var settingsBlock;\n        var settingsMargin;\n        var finalElement;\n        var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n        var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n        var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n        var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n        var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n        var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n        var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n        var updateScrollbarInfos = function updateScrollbarInfos() {\n          if (doScrollLeft) refreshScrollbarHandleOffset(true);\n          if (doScrollTop) refreshScrollbarHandleOffset(false);\n        };\n\n        var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\n          updateScrollbarInfos();\n          completeCallback();\n        };\n\n        function checkSettingsStringValue(currValue, allowedValues) {\n          for (i = 0; i < allowedValues[strLength]; i++) {\n            if (currValue === allowedValues[i]) return true;\n          }\n\n          return false;\n        }\n\n        function getRawScroll(isX, coordinates) {\n          var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n          coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n          if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n            //decides RTL normalization \"hack\" with .n\n            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n            for (i = 0; i < coordinateProps[strLength]; i++) {\n              if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n            }\n          }\n        }\n\n        function getFinalScroll(isX, rawScroll) {\n          var isString = type(rawScroll) == TYPES.s;\n          var operator;\n          var amount;\n          var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n          var currScroll = scrollInfo._currentScroll;\n          var maxScroll = scrollInfo._maxScroll;\n          var mult = ' * ';\n          var finalValue;\n          var isRTLisX = _isRTL && isX;\n          var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n          var strReplace = 'replace';\n          var evalFunc = eval;\n          var possibleOperator;\n\n          if (isString) {\n            //check operator\n            if (rawScroll[strLength] > 2) {\n              possibleOperator = rawScroll.substr(0, 2);\n              if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n            } //calculate units and shortcuts\n\n\n            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n            rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n            [strReplace](/</g, 0) //'<'   = 0%\n            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n            [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n          } else {\n            amount = rawScroll;\n          }\n\n          if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\n            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n            operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n            switch (operator) {\n              case '+=':\n                finalValue = operatorCurrScroll + amount;\n                break;\n\n              case '-=':\n                finalValue = operatorCurrScroll - amount;\n                break;\n\n              case '*=':\n                finalValue = operatorCurrScroll * amount;\n                break;\n\n              case '/=':\n                finalValue = operatorCurrScroll / amount;\n                break;\n\n              default:\n                finalValue = amount;\n                break;\n            }\n\n            finalValue = invert ? maxScroll - finalValue : finalValue;\n            finalValue *= negate ? -1 : 1;\n            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n          }\n\n          return finalValue === currScroll ? undefined : finalValue;\n        }\n\n        function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n          var resultDefault = [defaultValue, defaultValue];\n          var valueType = type(value);\n          var valueArrLength;\n          var valueArrItem; //value can be [ string, or array of two strings ]\n\n          if (valueType == valueInternalType) {\n            value = [value, value];\n          } else if (valueType == TYPES.a) {\n            valueArrLength = value[strLength];\n            if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n              if (valueArrLength === 1) value[1] = defaultValue;\n\n              for (i = 0; i < valueArrLength; i++) {\n                valueArrItem = value[i];\n\n                if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                  value = resultDefault;\n                  break;\n                }\n              }\n            }\n          } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n          return {\n            x: value[0],\n            y: value[1]\n          };\n        }\n\n        function generateMargin(marginTopRightBottomLeftArray) {\n          var result = [];\n          var currValue;\n          var currValueType;\n          var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n          for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n            if (i === valueDirections[strLength]) break;\n            currValue = marginTopRightBottomLeftArray[i];\n            currValueType = type(currValue);\n            if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n          }\n\n          return result;\n        }\n\n        if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n          //get settings\n          var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n          var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n          var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n          var block = coordinatesIsElementObj ? coordinates.block : 0;\n          var marginDefault = [0, 0, 0, 0];\n          var marginType = type(margin);\n          var marginLength;\n          finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n          if (finalElement[strLength] > 0) {\n            //margin can be [ boolean, number, array of 2, array of 4, object ]\n            if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n              marginLength = margin[strLength];\n              if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n            } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n            settingsMargin = margin;\n            var viewportScroll = {\n              l: _scrollHorizontalInfo._currentScroll,\n              t: _scrollVerticalInfo._currentScroll\n            }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n            var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n            var elementOffset = finalElement.offset();\n            var doNotScroll = {\n              x: settingsScroll.x == strNever || settingsAxis == _strY,\n              y: settingsScroll.y == strNever || settingsAxis == _strX\n            };\n            elementOffset[_strTop] -= settingsMargin[0];\n            elementOffset[_strLeft] -= settingsMargin[3];\n            var elementScrollCoordinates = {\n              x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n              y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n            };\n\n            if (_isRTL) {\n              if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n              if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n              if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n            } //measuring is required\n\n\n            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n              var measuringElm = finalElement[0];\n              var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                width: measuringElm[LEXICON.oW],\n                height: measuringElm[LEXICON.oH]\n              };\n              var elementSize = {\n                w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n              };\n\n              var finalizeBlock = function finalizeBlock(isX) {\n                var vars = getScrollbarVars(isX);\n                var wh = vars._w_h;\n                var lt = vars._left_top;\n                var xy = vars._x_y;\n                var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                var blockIsCenter = settingsBlock[xy] == strCenter;\n                var blockIsNearest = settingsBlock[xy] == strNearest;\n                var scrollNever = settingsScroll[xy] == strNever;\n                var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                var vpSize = _viewportSize[wh];\n                var vpOffset = viewportOffset[lt];\n                var elSize = elementSize[wh];\n                var elOffset = elementOffset[lt];\n                var divide = blockIsCenter ? 2 : 1;\n                var elementCenterOffset = elOffset + elSize / 2;\n                var viewportCenterOffset = vpOffset + vpSize / 2;\n                var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                  if (blockIsNearest || scrollIfNeeded) {\n                    doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                    blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                  }\n\n                  elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                }\n              };\n\n              finalizeBlock(true);\n              finalizeBlock(false);\n            }\n\n            if (doNotScroll.y) delete elementScrollCoordinates.y;\n            if (doNotScroll.x) delete elementScrollCoordinates.x;\n            coordinates = elementScrollCoordinates;\n          }\n        }\n\n        finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n        finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n        doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\n        doScrollTop = finalScroll[_strScrollTop] !== undefined;\n\n        if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n          if (durationIsObject) {\n            duration.complete = proxyCompleteCallback;\n\n            _viewportElement.animate(finalScroll, duration);\n          } else {\n            animationOptions = {\n              duration: duration,\n              complete: proxyCompleteCallback\n            };\n\n            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n              specialEasing[_strScrollLeft] = easing[0] || easing.x;\n              specialEasing[_strScrollTop] = easing[1] || easing.y;\n              animationOptions.specialEasing = specialEasing;\n            } else {\n              animationOptions.easing = easing;\n            }\n\n            _viewportElement.animate(finalScroll, animationOptions);\n          }\n        } else {\n          if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n          if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n          updateScrollbarInfos();\n        }\n      };\n      /**\r\n       * Stops all scroll animations.\r\n       * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n       */\n\n\n      _base.scrollStop = function (param1, param2, param3) {\n        _viewportElement.stop(param1, param2, param3);\n\n        return _base;\n      };\n      /**\r\n       * Returns all relevant elements.\r\n       * @param elementName The name of the element which shall be returned.\r\n       * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n       */\n\n\n      _base.getElements = function (elementName) {\n        var obj = {\n          target: _targetElementNative,\n          host: _hostElementNative,\n          padding: _paddingElementNative,\n          viewport: _viewportElementNative,\n          content: _contentElementNative,\n          scrollbarHorizontal: {\n            scrollbar: _scrollbarHorizontalElement[0],\n            track: _scrollbarHorizontalTrackElement[0],\n            handle: _scrollbarHorizontalHandleElement[0]\n          },\n          scrollbarVertical: {\n            scrollbar: _scrollbarVerticalElement[0],\n            track: _scrollbarVerticalTrackElement[0],\n            handle: _scrollbarVerticalHandleElement[0]\n          },\n          scrollbarCorner: _scrollbarCornerElement[0]\n        };\n        return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n      };\n      /**\r\n       * Returns a object which describes the current state of this instance.\r\n       * @param stateProperty A specific property from the state object which shall be returned.\r\n       * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n       */\n\n\n      _base.getState = function (stateProperty) {\n        function prepare(obj) {\n          if (!FRAMEWORK.isPlainObject(obj)) return obj;\n          var extended = extendDeep({}, obj);\n\n          var changePropertyName = function changePropertyName(from, to) {\n            if (extended[LEXICON.hOP](from)) {\n              extended[to] = extended[from];\n              delete extended[from];\n            }\n          };\n\n          changePropertyName('w', _strWidth); //change w to width\n\n          changePropertyName('h', _strHeight); //change h to height\n\n          delete extended.c; //delete c (the 'changed' prop)\n\n          return extended;\n        }\n\n        ;\n        var obj = {\n          destroyed: !!prepare(_destroyed),\n          sleeping: !!prepare(_sleeping),\n          autoUpdate: prepare(!_mutationObserversConnected),\n          widthAuto: prepare(_widthAutoCache),\n          heightAuto: prepare(_heightAutoCache),\n          padding: prepare(_cssPaddingCache),\n          overflowAmount: prepare(_overflowAmountCache),\n          hideOverflow: prepare(_hideOverflowCache),\n          hasOverflow: prepare(_hasOverflowCache),\n          contentScrollSize: prepare(_contentScrollSizeCache),\n          viewportSize: prepare(_viewportSize),\n          hostSize: prepare(_hostSizeCache),\n          documentMixed: prepare(_documentMixed)\n        };\n        return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n      };\n      /**\r\n       * Gets all or specific extension instance.\r\n       * @param extName The name of the extension from which the instance shall be got.\r\n       * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n       */\n\n\n      _base.ext = function (extName) {\n        var result;\n\n        var privateMethods = _extensionsPrivateMethods.split(' ');\n\n        var i = 0;\n\n        if (type(extName) == TYPES.s) {\n          if (_extensions[LEXICON.hOP](extName)) {\n            result = extendDeep({}, _extensions[extName]);\n\n            for (; i < privateMethods.length; i++) {\n              delete result[privateMethods[i]];\n            }\n          }\n        } else {\n          result = {};\n\n          for (i in _extensions) {\n            result[i] = extendDeep({}, _base.ext(i));\n          }\n        }\n\n        return result;\n      };\n      /**\r\n       * Adds a extension to this instance.\r\n       * @param extName The name of the extension which shall be added.\r\n       * @param extensionOptions The extension options which shall be used.\r\n       * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n       */\n\n\n      _base.addExt = function (extName, extensionOptions) {\n        var registeredExtensionObj = _plugin.extension(extName);\n\n        var instance;\n        var instanceAdded;\n        var instanceContract;\n        var contractResult;\n        var contractFulfilled = true;\n\n        if (registeredExtensionObj) {\n          if (!_extensions[LEXICON.hOP](extName)) {\n            instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n            if (instance) {\n              instanceContract = instance.contract;\n\n              if (type(instanceContract) == TYPES.f) {\n                contractResult = instanceContract(window);\n                contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n              }\n\n              if (contractFulfilled) {\n                _extensions[extName] = instance;\n                instanceAdded = instance.added;\n                if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                return _base.ext(extName);\n              }\n            }\n          } else return _base.ext(extName);\n        } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n      };\n      /**\r\n       * Removes a extension from this instance.\r\n       * @param extName The name of the extension which shall be removed.\r\n       * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n       */\n\n\n      _base.removeExt = function (extName) {\n        var instance = _extensions[extName];\n        var instanceRemoved;\n\n        if (instance) {\n          delete _extensions[extName];\n          instanceRemoved = instance.removed;\n          if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n          return true;\n        }\n\n        return false;\n      };\n      /**\r\n       * Constructs the plugin.\r\n       * @param targetElement The element to which the plugin shall be applied.\r\n       * @param options The initial options of the plugin.\r\n       * @param extensions The extension(s) which shall be added right after the initialization.\r\n       * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n       */\n\n\n      function construct(targetElement, options, extensions) {\n        _defaultOptions = globals.defaultOptions;\n        _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n        _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n        _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n        _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n        setOptions(extendDeep({}, _defaultOptions, options));\n        _cssCalc = globals.cssCalc;\n        _msieVersion = globals.msie;\n        _autoUpdateRecommended = globals.autoUpdateRecommended;\n        _supportTransition = globals.supportTransition;\n        _supportTransform = globals.supportTransform;\n        _supportPassiveEvents = globals.supportPassiveEvents;\n        _supportResizeObserver = globals.supportResizeObserver;\n        _supportMutationObserver = globals.supportMutationObserver;\n        _restrictedMeasuring = globals.restrictedMeasuring;\n        _documentElement = FRAMEWORK(targetElement.ownerDocument);\n        _documentElementNative = _documentElement[0];\n        _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n        _windowElementNative = _windowElement[0];\n        _htmlElement = findFirst(_documentElement, 'html');\n        _bodyElement = findFirst(_htmlElement, 'body');\n        _targetElement = FRAMEWORK(targetElement);\n        _targetElementNative = _targetElement[0];\n        _isTextarea = _targetElement.is('textarea');\n        _isBody = _targetElement.is('body');\n        _documentMixed = _documentElementNative !== document;\n        /* On a div Element The if checks only whether:\r\n         * - the targetElement has the class \"os-host\"\r\n         * - the targetElement has a a child with the class \"os-padding\"\r\n         * \r\n         * If that's the case, its assumed the DOM has already the following structure:\r\n         * (The \".os-host\" element is the targetElement)\r\n         *\r\n         *  <div class=\"os-host\">\r\n         *      <div class=\"os-resize-observer-host\"></div>\r\n         *      <div class=\"os-padding\">\r\n         *          <div class=\"os-viewport\">\r\n         *              <div class=\"os-content\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar-corner\"></div>\r\n         *  </div>\r\n         *\r\n         * =====================================================================================\r\n         * \r\n         * On a Textarea Element The if checks only whether:\r\n         * - the targetElement has the class \"os-textarea\" \r\n         * - the targetElement is inside a element with the class \"os-content\" \r\n         * \r\n         * If that's the case, its assumed the DOM has already the following structure:\r\n         * (The \".os-textarea\" (textarea) element is the targetElement)\r\n         *\r\n         *  <div class=\"os-host-textarea\">\r\n         *      <div class=\"os-resize-observer-host\"></div>\r\n         *      <div class=\"os-padding os-text-inherit\">\r\n         *          <div class=\"os-viewport os-text-inherit\">\r\n         *              <div class=\"os-content os-text-inherit\">\r\n         *                  <div class=\"os-textarea-cover\"></div>\r\n         *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n         *              </div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar-corner\"></div>\r\n         *  </div>\r\n         */\n\n        _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n        var initBodyScroll;\n\n        var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n          dispatchCallback('onInitializationWithdrawn');\n\n          if (_domExists) {\n            setupStructureDOM(true);\n            setupScrollbarsDOM(true);\n            setupScrollbarCornerDOM(true);\n          }\n\n          _destroyed = true;\n          _sleeping = true;\n          return _base;\n        }\n\n        if (_isBody) {\n          initBodyScroll = {};\n          initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n          initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n          _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n            _viewportElement.removeAttr(LEXICON.ti);\n\n            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n          };\n        } //build OverlayScrollbars DOM\n\n\n        setupStructureDOM();\n        setupScrollbarsDOM();\n        setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n        setupStructureEvents();\n        setupScrollbarEvents(true);\n        setupScrollbarEvents(false);\n        setupScrollbarCornerEvents(); //create mutation observers\n\n        createMutationObservers(); //build resize observer for the host element\n\n        setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n        if (_isBody) {\n          //apply the body scroll to handle it right in the update method\n          _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n          if (document.activeElement == targetElement && _viewportElementNative.focus) {\n            //set a tabindex to make the viewportElement focusable\n            _viewportElement.attr(LEXICON.ti, '-1');\n\n            _viewportElementNative.focus();\n            /* the tabindex has to be removed due to;\r\n             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n             */\n\n\n            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n          }\n        } //update for the first time & initialize cache\n\n\n        _base.update(_strAuto); //the plugin is initialized now!\n\n\n        _initialized = true;\n        dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n        each(_callbacksInitQeueue, function (index, value) {\n          dispatchCallback(value.n, value.a);\n        });\n        _callbacksInitQeueue = []; //add extensions\n\n        if (type(extensions) == TYPES.s) extensions = [extensions];\n        if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n          _base.addExt(value);\n        });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n          _base.addExt(key, value);\n        }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n        setTimeout(function () {\n          if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n        }, 333);\n        return _base;\n      }\n\n      if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n        INSTANCES(pluginTargetElement, _base);\n      }\n\n      return _base;\n    }\n    /**\r\n     * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n     * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n     * @param options The custom options with which the plugin shall be initialized.\r\n     * @param extensions The extension(s) which shall be added right after initialization.\r\n     * @returns {*}\r\n     */\n\n\n    _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n      if (arguments[LEXICON.l] === 0) return this;\n      var arr = [];\n      var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n      var inst;\n      var result; //pluginTargetElements is null or undefined\n\n      if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n      /*\r\n         pluginTargetElements will be converted to:\r\n         1. A jQueryElement Array\r\n         2. A HTMLElement Array\r\n         3. A Array with a single HTML Element\r\n         so pluginTargetElements is always a array.\r\n      */\n\n      pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n      initOverlayScrollbarsStatics();\n\n      if (pluginTargetElements[LEXICON.l] > 0) {\n        if (optsIsPlainObj) {\n          FRAMEWORK.each(pluginTargetElements, function (i, v) {\n            inst = v;\n            if (inst !== undefined) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n          });\n        } else {\n          FRAMEWORK.each(pluginTargetElements, function (i, v) {\n            inst = INSTANCES(v);\n            if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined) arr.push(inst);\n          });\n        }\n\n        result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n      }\n\n      return result;\n    };\n    /**\r\n     * Returns a object which contains global information about the plugin and each instance of it.\r\n     * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n     */\n\n\n    _plugin.globals = function () {\n      initOverlayScrollbarsStatics();\n      var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n      delete globals['msie'];\n      return globals;\n    };\n    /**\r\n     * Gets or Sets the default options for each new plugin initialization.\r\n     * @param newDefaultOptions The object with which the default options shall be extended.\r\n     */\n\n\n    _plugin.defaultOptions = function (newDefaultOptions) {\n      initOverlayScrollbarsStatics();\n      var currDefaultOptions = _pluginsGlobals.defaultOptions;\n      if (newDefaultOptions === undefined) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n      _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n    };\n    /**\r\n     * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n     * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n     * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n     */\n\n\n    _plugin.valid = function (osInstance) {\n      return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n    };\n    /**\r\n     * Registers, Unregisters or returns a extension.\r\n     * Register: Pass the name and the extension. (defaultOptions is optional)\r\n     * Unregister: Pass the name and anything except a function as extension parameter.\r\n     * Get extension: Pass the name of the extension which shall be got.\r\n     * Get all extensions: Pass no arguments.\r\n     * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n     * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n     * @param defaultOptions The default options which shall be used for the registered extension.\r\n     */\n\n\n    _plugin.extension = function (extensionName, extension, defaultOptions) {\n      var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n      var argLen = arguments[LEXICON.l];\n      var i = 0;\n\n      if (argLen < 1 || !extNameTypeString) {\n        //return a copy of all extension objects\n        return FRAMEWORK.extend(true, {\n          length: _pluginsExtensions[LEXICON.l]\n        }, _pluginsExtensions);\n      } else if (extNameTypeString) {\n        if (COMPATIBILITY.type(extension) == TYPES.f) {\n          //register extension\n          _pluginsExtensions.push({\n            name: extensionName,\n            extensionFactory: extension,\n            defaultOptions: defaultOptions\n          });\n        } else {\n          for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n            if (_pluginsExtensions[i].name === extensionName) {\n              if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n              else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n            }\n          }\n        }\n      }\n    };\n\n    return _plugin;\n  }();\n\n  if (JQUERY && JQUERY.fn) {\n    /**\r\n     * The jQuery initialization interface.\r\n     * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n     * @param extensions The extension(s) which shall be added right after initialization.\r\n     * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n     */\n    JQUERY.fn.overlayScrollbars = function (options, extensions) {\n      var _elements = this;\n\n      if (JQUERY.isPlainObject(options)) {\n        JQUERY.each(_elements, function () {\n          PLUGIN(this, options, extensions);\n        });\n        return _elements;\n      } else return PLUGIN(_elements, options);\n    };\n  }\n\n  return PLUGIN;\n});"],"sourceRoot":""}